[{"/mnt/c/Users/luker/Documents/Github/midi-generator/src/index.js":"1","/mnt/c/Users/luker/Documents/Github/midi-generator/src/reportWebVitals.js":"2","/mnt/c/Users/luker/Documents/Github/midi-generator/src/components/App.js":"3","/mnt/c/Users/luker/Documents/Github/midi-generator/src/components/MidiDisplay.jsx":"4","/mnt/c/Users/luker/Documents/Github/midi-generator/src/sound/chords.js":"5","/mnt/c/Users/luker/Documents/Github/midi-generator/src/sound/player.js":"6","/mnt/c/Users/luker/Documents/Github/midi-generator/src/sound/rythm.js":"7","/mnt/c/Users/luker/Documents/Github/midi-generator/src/components/Grid.jsx":"8","/mnt/c/Users/luker/Documents/Github/midi-generator/src/genetic/population.js":"9","/mnt/c/Users/luker/Documents/Github/midi-generator/src/store/store.js":"10","/mnt/c/Users/luker/Documents/Github/midi-generator/src/reducers/index.js":"11","/mnt/c/Users/luker/Documents/Github/midi-generator/src/reducers/populationReducer.js":"12","/mnt/c/Users/luker/Documents/Github/midi-generator/src/actions/actionTypes.js":"13","/mnt/c/Users/luker/Documents/Github/midi-generator/src/actions/populationActions.js":"14","/mnt/c/Users/luker/Documents/Github/midi-generator/src/components/ControlPanel.jsx":"15","/mnt/c/Users/luker/Documents/Github/midi-generator/src/components/DisplayNotes.jsx":"16","/mnt/c/Users/luker/Documents/Github/midi-generator/src/wdyr.js":"17","/mnt/c/Users/luker/Documents/Github/midi-generator/src/components/NewGeneration.jsx":"18","/mnt/c/Users/luker/Documents/Github/midi-generator/src/components/Test.jsx":"19","/mnt/c/Users/luker/Documents/Github/midi-generator/src/genetic/genome.js":"20"},{"size":685,"mtime":1609960837722,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1609178616793,"results":"23","hashOfConfig":"22"},{"size":890,"mtime":1610197551490,"results":"24","hashOfConfig":"22"},{"size":1417,"mtime":1610196804617,"results":"25","hashOfConfig":"22"},{"size":2812,"mtime":1610216454014,"results":"26","hashOfConfig":"22"},{"size":2236,"mtime":1609597207426,"results":"27","hashOfConfig":"22"},{"size":929,"mtime":1610027660041,"results":"28","hashOfConfig":"22"},{"size":1402,"mtime":1610197489151,"results":"29","hashOfConfig":"22"},{"size":4323,"mtime":1610197071993,"results":"30","hashOfConfig":"22"},{"size":128,"mtime":1609711162012,"results":"31","hashOfConfig":"22"},{"size":166,"mtime":1609712534050,"results":"32","hashOfConfig":"22"},{"size":776,"mtime":1609949837329,"results":"33","hashOfConfig":"22"},{"size":155,"mtime":1609949847195,"results":"34","hashOfConfig":"22"},{"size":404,"mtime":1609949876843,"results":"35","hashOfConfig":"22"},{"size":2254,"mtime":1610197500812,"results":"36","hashOfConfig":"22"},{"size":1488,"mtime":1610196780548,"results":"37","hashOfConfig":"22"},{"size":337,"mtime":1609975222260,"results":"38","hashOfConfig":"22"},{"size":516,"mtime":1610058474058,"results":"39","hashOfConfig":"22"},{"size":1520,"mtime":1610197920914,"results":"40","hashOfConfig":"22"},{"size":328,"mtime":1610193922141,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"o4f6f7",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/mnt/c/Users/luker/Documents/Github/midi-generator/src/index.js",[],["84","85"],"/mnt/c/Users/luker/Documents/Github/midi-generator/src/reportWebVitals.js",[],"/mnt/c/Users/luker/Documents/Github/midi-generator/src/components/App.js",["86","87"],"/mnt/c/Users/luker/Documents/Github/midi-generator/src/components/MidiDisplay.jsx",[],"/mnt/c/Users/luker/Documents/Github/midi-generator/src/sound/chords.js",["88"],"/mnt/c/Users/luker/Documents/Github/midi-generator/src/sound/player.js",[],"/mnt/c/Users/luker/Documents/Github/midi-generator/src/sound/rythm.js",[],"/mnt/c/Users/luker/Documents/Github/midi-generator/src/components/Grid.jsx",[],"/mnt/c/Users/luker/Documents/Github/midi-generator/src/genetic/population.js",["89"],"import {createRandomProgression} from '../sound/chords'\r\nimport { calcGenome } from './genome'\r\n\r\nexport function createPopulation(size,jazziness, numberOfNotes, noteLengths) {\r\n    const population = []\r\n\r\n    for(let i =0; i<size; i++){\r\n        population.push({...createRandomProgression(jazziness, numberOfNotes, noteLengths),score: 50})\r\n    }\r\n    return population\r\n}\r\n\r\nexport function newGeneration(population){\r\n\r\n    const roulette = createRoulette(population.map(x => x.score))\r\n\r\n    const spec1 = population[pickSpeciman(roulette)]\r\n    const spec2 = population[pickSpeciman(roulette)]\r\n\r\n    const crossed = cross(spec1,spec2)\r\n}\r\n\r\nfunction createRoulette(scores){\r\n    const max = scores.reduce((a, b) => a + b);\r\n    const probabilities = scores.map(score => score/max)\r\n    return probabilities\r\n}\r\n\r\nfunction pickSpeciman(roulette){\r\n    const pick = Math.random();\r\n    let acc = 0\r\n    let i = 0\r\n    while(acc<pick){\r\n        acc += roulette[i]\r\n        i++\r\n    }\r\n    return i-1\r\n}\r\n\r\nexport function cross(prog1, prog2){\r\n    const max = Math.max(prog1.genome.scale, prog2.genome.scale)\r\n    const min = Math.min(prog1.genome.scale, prog2.genome.scale)\r\n    const newScale = Math.floor(Math.random() * (max - min)) + min;\r\n\r\n    const length = 8\r\n    const newRythm = crossRythms(prog1.rythm, prog2.rythm, length)\r\n\r\n    const newMelody = crossMelodies(prog1, prog2, newRythm)\r\n\r\n    return {notes: newMelody, rythm: newRythm, genome: calcGenome(newMelody, newRythm, newScale) ,score:50}\r\n}\r\n\r\nfunction crossMelodies(prog1, prog2, newRythm){\r\n    let timeline1 = 0\r\n    let timeline2 = 0\r\n    let newTimeline = 0\r\n    let i1 = 0\r\n    let i2 = 0\r\n    let chords = []\r\n    for(let i=0; i<newRythm.length; i++){\r\n        const window=[newTimeline, newTimeline+newRythm[i]]\r\n\r\n        let candidates = []\r\n        while(window[1]>=timeline1 && i1<prog1.rythm.length){\r\n            const notes = [...new Set(prog1.notes[i1].flat())]\r\n            candidates.push(notes)\r\n            timeline1+=prog1.rythm[i1]\r\n            i1++\r\n        }\r\n\r\n        while(window[1]>=timeline2 && i2<prog2.rythm.length){\r\n            const notes = [...new Set(prog2.notes[i2].flat())]\r\n            candidates.push(notes)\r\n            timeline2+=prog2.rythm[i2]\r\n            i2++\r\n        }\r\n        newTimeline += newRythm[i]\r\n\r\n        candidates =  [...new Set(candidates.flat())]\r\n\r\n        const choice = Math.floor(Math.random()*candidates.length)\r\n\r\n        chords.push([candidates[choice]])\r\n    }\r\n    return chords\r\n}\r\n\r\nfunction crossRythms(rythm1, rythm2, length){\r\n    let timeline1 = 0\r\n    let timeline2 = 0\r\n    let newTimeline = 0\r\n    let newRythm = []\r\n    let i1 = 0\r\n    let i2 = 0\r\n    let i = 0\r\n    while(newTimeline<length){\r\n        let choice\r\n        if(Math.random()<0.5){\r\n            choice=0\r\n        }else {\r\n            choice=1\r\n        }\r\n\r\n        if (choice===0){\r\n            if(newTimeline<=timeline2){\r\n                if(newTimeline>timeline1){\r\n                    if(i>=Math.max(i1,i2)) continue\r\n                    const diff = newTimeline-timeline1\r\n                    newRythm[newRythm.length-1]-=diff\r\n                    newRythm.push(diff)\r\n                    i++\r\n                }else{\r\n                    newRythm.push(rythm1[i1])\r\n                    i++\r\n                    newTimeline += rythm1[i1]\r\n                }\r\n            }\r\n        } else {\r\n            if(newTimeline<=timeline1){\r\n                if(newTimeline>timeline2){\r\n                    if(i>=Math.max(i1,i2)) continue\r\n                    const diff = newTimeline-timeline2\r\n                    newRythm[newRythm.length-1]-=diff\r\n                    newRythm.push(diff)\r\n                    i++\r\n                }else{\r\n                    newRythm.push(rythm2[i2])\r\n                    i++\r\n                    newTimeline += rythm2[i2]\r\n                }\r\n            }\r\n        }\r\n        if(newTimeline>timeline1){\r\n            timeline1+=rythm1[i1]\r\n            if(i1<rythm1.length-1)\r\n                i1++\r\n        }\r\n        if(newTimeline>timeline2){\r\n            timeline2+=rythm2[i2]\r\n            if(i2<rythm2.length-1)\r\n                i2++\r\n        }\r\n    }\r\n    if(newTimeline>length){\r\n        newRythm[newRythm.length-1] -= newTimeline-length\r\n    }\r\n    return newRythm\r\n}","/mnt/c/Users/luker/Documents/Github/midi-generator/src/store/store.js",[],"/mnt/c/Users/luker/Documents/Github/midi-generator/src/reducers/index.js",[],"/mnt/c/Users/luker/Documents/Github/midi-generator/src/reducers/populationReducer.js",[],"/mnt/c/Users/luker/Documents/Github/midi-generator/src/actions/actionTypes.js",[],"/mnt/c/Users/luker/Documents/Github/midi-generator/src/actions/populationActions.js",[],"/mnt/c/Users/luker/Documents/Github/midi-generator/src/components/ControlPanel.jsx",[],"/mnt/c/Users/luker/Documents/Github/midi-generator/src/components/DisplayNotes.jsx",[],"/mnt/c/Users/luker/Documents/Github/midi-generator/src/wdyr.js",[],"/mnt/c/Users/luker/Documents/Github/midi-generator/src/components/NewGeneration.jsx",[],"/mnt/c/Users/luker/Documents/Github/midi-generator/src/components/Test.jsx",[],"/mnt/c/Users/luker/Documents/Github/midi-generator/src/genetic/genome.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":5,"column":9,"nodeType":"96","messageId":"97","endLine":5,"endColumn":18},{"ruleId":"94","severity":1,"message":"98","line":10,"column":3,"nodeType":"96","messageId":"97","endLine":10,"endColumn":7},{"ruleId":"94","severity":1,"message":"99","line":36,"column":11,"nodeType":"96","messageId":"97","endLine":36,"endColumn":17},{"ruleId":"94","severity":1,"message":"100","line":20,"column":11,"nodeType":"96","messageId":"97","endLine":20,"endColumn":18},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Jumbotron' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'length' is assigned a value but never used.","'crossed' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]