{"version":3,"sources":["sound/player.js","components/DisplayNotes.jsx","actions/actionTypes.js","components/MidiDisplay.jsx","actions/populationActions.js","components/Grid.jsx","sound/rythm.js","sound/chords.js","components/ControlPanel.jsx","genetic/population.js","components/App.js","reportWebVitals.js","reducers/populationReducer.js","reducers/index.js","store/store.js","index.js"],"names":["gain","Tone","toDestination","filter","frequency","type","rolloff","Q","connect","synth","oscillator","count","spread","envelope","attack","decay","sustain","release","notesMap","playProgression","chords","rythm","lengths","delay","i","setTimeout","chord","duration","now","translatedNotes","notes","map","x","octave","Math","floor","toString","triggerAttack","releaseAll","playChord","length","DisplayNotes","useState","cols","setCols","useEffect","height","max","baseLine","min","j","rows","includes","push","style","width","reverse","React","memo","ADD_SPECIMAN","SET_SPECIMAN_SCORE","DELETE_POPULATION","MidiDisplay","props","dispatch","useDispatch","Container","className","Row","progression","onClick","fontSize","Col","sm","Slider","aria-labelledby","valueLabelDisplay","onChange","_","value","index","score","payload","setSpecimanScore","Grid","population","useSelector","state","populationFormatted","setPopulationFormatted","arr","splice","row","rythms","maj","scales","major","mode","minor","createRandomProgression","jazziness","numberOfNotes","currentLength","rythmStructure","diff","randomNumber","random","constructRythm","RandomChord","scale","note","scaleType","randomNote","rootNote","transposed","root","dispersion","overload","choice","console","log","randomVoicing","ControlPanel","generation","setGeneration","populationSize","setState","handleChange","e","target","name","restart","size","createPopulation","speciman","TextField","label","Button","variant","color","theme","createMuiTheme","palette","primary","main","secondary","App","ThemeProvider","Jumbotron","whyDidYouRender","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","populationReducer","action","item","combineReducers","createStore","rootReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"6QAEMA,EAAO,IAAIC,IAAU,IAAKC,gBAC1BC,EAAS,IAAIF,IAAY,CAACG,UAAW,IAAMC,KAAM,UAAWC,SAAU,GAAIC,EAAG,IAAIC,QAAQR,GAEzFS,EAAQ,IAAIR,IAAeA,IAAW,CAC1CS,WAAa,CACXC,MAAO,EACPC,OAAQ,EACRP,KAAO,YAQPQ,SAAU,CACVC,OAAQ,KACRC,MAAO,EACPC,QAAS,EACTC,QAAS,MAEVT,QAAQL,GAELe,EAAW,CACf,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,KAGK,SAASC,EAAgBC,EAAQC,GAGtC,IAFA,IAAIC,EAAUD,EACVE,EAAQ,EAFgC,WAGpCC,GACJC,YAAW,YAKV,SAAmBC,EAAMC,GAC9B,IAAMC,EAAM3B,MACN4B,GAK2BC,EALiBJ,EAM3CI,EAAMC,KAAI,SAAAC,GACf,IAAMC,EAASC,KAAKC,MAAMH,EAAE,IAE5B,OADad,EAASc,EAAE,IACZC,EAAOG,eAJvB,IAAmCN,EAJjCrB,EAAM4B,cAAcR,EAAiBD,GACrCnB,EAAM6B,WAAaV,EAAMD,GATEY,CAAUnB,EAAOI,GAAGF,EAAQE,MAAc,IAAND,GAC3DA,GAASD,EAAQE,IAFbA,EAAI,EAAGA,EAAEF,EAAQkB,OAAQhB,IAAK,EAA9BA,G,sCCzCV,SAASiB,EAAT,GAA+B,IAARX,EAAO,EAAPA,MAAO,EACFY,mBAAS,IADP,mBACnBC,EADmB,KACbC,EADa,KA2B5B,OAzBEC,qBAAU,WAKN,IAJA,IAAMC,EAASZ,KAAKa,IAAL,MAAAb,KAAI,YAAQJ,EAAMV,OAAOW,KAAI,SAAAL,GAAK,OAAIQ,KAAKa,IAAL,MAAAb,KAAI,YAAQR,SAC3DsB,EAAWd,KAAKe,IAAL,MAAAf,KAAI,YAAQJ,EAAMV,OAAOW,KAAI,SAAAL,GAAK,OAAIQ,KAAKe,IAAL,MAAAf,KAAI,YAAQR,SAC/DiB,EAAK,GACLH,EAAS,EACLU,EAAI,EAAGA,EAAEpB,EAAMT,MAAMmB,OAAQU,IACjCV,GAAQV,EAAMT,MAAM6B,GAExB,IAAI,IAAIA,EAAI,EAAGA,EAAEpB,EAAMV,OAAOoB,OAAQU,IAAK,CAGvC,IAFA,IAAMxB,EAAQI,EAAMV,OAAO8B,GACvBC,EAAO,GACH3B,EAAIwB,EAAUxB,GAAGsB,EAAQtB,IAC9BE,EAAM0B,SAAS5B,GACd2B,EAAKE,KACL,qBAAKC,MAAO,CAACR,QAAS,GAAGA,EAAOE,GAAU,KAAKZ,WAAW,IAAKmB,MAAM,OAAQ,mBAAmB,cAGhGJ,EAAKE,KACL,qBAAKC,MAAO,CAACR,QAAS,GAAGA,EAAOE,GAAU,KAAKZ,WAAW,IAAKmB,MAAM,WAGzEZ,EAAKU,KAAK,qBAAKC,MAAO,CAACR,OAAQ,OAAQS,OAAQzB,EAAMT,MAAM6B,GAAGV,EAAO,KAAKJ,WAAW,KAA3E,SAAkFe,EAAKK,aAErGZ,EAAQD,KACP,CAACb,IACDa,EAGMc,UAAMC,KAAKjB,GChCbkB,EAAe,eACfC,EAAqB,qBACrBC,EAAoB,oBCQjC,SAASC,EAAYC,GACnB,IAAMC,EAAWC,cAUjB,OAAQ,eAACC,EAAA,EAAD,CAAWC,UAAU,YAArB,UACJ,eAACC,EAAA,EAAD,CAAKD,UAAU,iBAAf,UACI,cAAC,EAAD,CAAcrC,MAAOiC,EAAMM,YAAYvC,QACvC,qBAAKqC,UAAU,OAAOG,QAPjB,WACXnD,EAAgB4C,EAAMM,YAAYvC,MAAMV,OAAQ2C,EAAMM,YAAYvC,MAAMT,QAMlE,SAAqC,cAAC,IAAD,CAAuBiC,MAAO,CAAEiB,SAAU,IAAMJ,UAAU,mBAEnG,eAACC,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,4CAIF,cAACD,EAAA,EAAD,UACA,cAACE,EAAA,EAAD,CACEC,kBAAgB,kBAChBC,kBAAkB,OAClB3B,IAAK,EACLF,IAAK,IACL8B,SAzBS,SAACC,EAAGC,GACnBf,ECP4B,SAAC,GAAD,IAAGgB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,MAAuB,CACnD5E,KAAMuD,EACNsB,QAAS,CAAEF,QAAOC,UDKTE,CAAiB,CAACH,MAAOjB,EAAMiB,MAAOC,MAAOF,MAyBhDA,MAAOhB,EAAMM,YAAYY,gBAOpBxB,UAAMC,KAAKI,GELXsB,MApCf,WACI,IACMC,EAAaC,aAAY,SAAAC,GAC3B,OAAOA,EAAMF,cAHL,EAO0C3C,mBAAS,IAPnD,mBAOL8C,EAPK,KAOgBC,EAPhB,KAed,OAPE5C,qBAAU,WAGN,IAFA,IAAI6C,EAAG,YAAOL,GACVG,EAAsB,GACpBE,EAAIlD,QAAQgD,EAAoBnC,KAAKqC,EAAIC,OAAO,EAVrC,IAWjBF,EAAuBD,KACtB,CAACH,IAGN,cAACnB,EAAA,EAAD,UACKsB,EAAoBzD,KAAI,SAAC6D,EAAIpE,GAC1B,OACI,cAAC4C,EAAA,EAAD,UAEQwB,EAAI7D,KAAI,SAACsC,EAAYnB,GACjB,OACA,cAACsB,EAAA,EAAD,CAAalB,MAAO,CAACR,OAAO,SAA5B,SACI,cAAC,EAAD,CAAauB,YAAaA,EAAaW,MAvB9C,EAuBqDxD,EAAe0B,KADvDA,OAJZ1B,S,iCCxBpBqE,EAAS,CAAC,GAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,GCElC,IAAMC,EAAM,QACN7C,EAAM,QAGN8C,EAAS,CACXC,MAAO,CACHlE,MAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IACpBmE,KAAM,CAACH,EAAI7C,EAAKA,EAAK6C,EAAKA,EAAK7C,EAAKA,KAItC7B,EAAS,CACX4E,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAC/BE,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,IAI5B,SAASC,EAAwBC,EAAWC,GAG/C,IAFA,IAAIjF,EAAS,GACTE,EDlBD,SAAwBkB,GAG3B,IAFA,IAAI8D,EAAgB,EAChBC,EAAiB,GACfD,EAAc9D,GAAO,CACvB,IAAIgE,EAAO,EACPC,EAAevE,KAAKC,MAAMD,KAAKwE,SAAWb,EAAOrD,QAErD,GAAG8D,EAAcT,EAAOY,GAAcD,EAAKhE,EAIvC,OAFA8D,GADAE,EAAOhE,EAAS8D,EAEhBC,EAAelD,KAAKmD,GACbD,EAGXD,GAAeT,EAAOY,GAAcD,EACpCD,EAAelD,KAAKwC,EAAOY,GAAcD,GAG7C,OAAOD,ECAOI,CAAe,GACrBnF,EAAI,EAAGA,EAAEF,EAAQkB,OAAQhB,IAC7BJ,EAAOiC,KAAKuD,EAAY,EAAE,QAAQP,EAAcD,EAAU,IAE9D,IAAMS,EAAQ3E,KAAKC,MAAsB,GAAhBD,KAAKwE,UAI9B,MAAO,CAACtF,OAFRA,EAASA,EAAOW,KAAI,SAAAL,GAAK,OAAIA,EAAMK,KAAI,SAAA+E,GAAI,OAAIA,EAAOD,QAEtCxF,MAAOC,GAGpB,SAASsF,EAAY3E,EAAO8E,EAAUV,EAAeD,GACxD,IAAMS,EAAQd,EAAOgB,GACfC,EAAa9E,KAAKC,MAAMD,KAAKwE,SAAWG,EAAM/E,MAAMU,QAEpDyD,EAAOY,EAAMZ,KAAKe,GACpBC,EAAWJ,EAAM/E,MAAMkF,GAIvBE,EASR,SAAuBC,EAAKlB,EAAKI,EAAeQ,GAG5C,IAHwF,IAArCT,EAAoC,uDAA1B,EAAGnE,EAAuB,uCAAfmF,EAAe,uDAAF,EACjF1F,EAAQ,GACR2F,EAAS,EACL7F,EAAI,EAAGA,EAAE6E,EAAe7E,IAAI,CAChC,IAAM8F,EAASpF,KAAKC,MAAMD,KAAKwE,SAAWN,EAAYlE,KAAKC,MAAMkF,GAAoB,EAAVjB,KACvEU,EAAO1F,EAAO6E,GAAMqB,GACxBR,GAAQK,EACLjF,KAAKwE,SAAYY,GAAQ,EAAErF,GAAS,GAAMmF,IACzCG,QAAQC,IAAI,gBACZV,GAAM,IAEP5E,KAAKwE,SAAYI,EAAK,GAAG,EAAE7E,GAAS,GAAMmF,GAAwB,IAATE,IACxDC,QAAQC,IAAI,kBACZV,GAAM,KAGNpF,EAAM0B,SAAS0D,IAAUD,EAAMzD,SAAS0D,EAAK,IAOjDpF,EAAM2B,KAAKyD,IALPO,IACA7F,KAMR,OAAOE,EApCK+F,CAAcR,EAAShB,EAAMI,EAAcQ,EAAM/E,MAAMsE,EAAUnE,GAEtDF,KAAI,SAAAC,GAAC,OAAIA,EAAI,GAAM,GAAGC,KAM7C,OALGC,KAAKwE,SAAU,EAAE,EAAGO,EAAS,KAC5BA,GAAU,IAEdC,EAAW7D,KAAK4D,EAAS,IAElBC,ECSIQ,MAhDf,WAAyB,IAAD,EACgBhF,mBAAS,GADzB,mBACbiF,EADa,KACDC,EADC,OAGMlF,mBAAS,CAC/BmF,eAAgB,GAChBzB,UAAW,EACXC,cAAe,IANC,mBAGbd,EAHa,KAGNuC,EAHM,KAQd9D,EAAWC,cAEX8D,EAAe,SAACC,GAClBF,EAAS,2BACFvC,GADC,kBAEHyC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOlD,UAI5BoD,EAAU,WACZP,EAAc,GACd5D,EJfgC,CACpC3D,KAAMwD,IKXH,SAA0BuE,EAAKhC,EAAWC,GAG7C,IAFA,IAAMhB,EAAa,GAEX7D,EAAG,EAAGA,EAAE4G,EAAM5G,IAClB6D,EAAWhC,KAAK,CAACvB,MAAOqE,EAAwBC,EAAWC,GAAgBpB,MAAO,IAEtF,OAAOI,EDoBHgD,CAAiB9C,EAAMsC,eAAgBtC,EAAMa,UAAWb,EAAMc,eAAetE,KAAI,SAAAC,GAAC,OAAIgC,EJ1BpD,CACtC3D,KAAMsD,EACNuB,QAAS,CAAEoD,SIwBoGtG,SASjH,OANEa,qBAAU,WACNsF,MAEC,CAAC5C,IAIN,eAACrB,EAAA,EAAD,WACI,cAACE,EAAA,EAAD,UACI,8CAAiBuD,OAErB,eAACvD,EAAA,EAAD,CAAKD,UAAU,MAAf,UACI,cAACK,EAAA,EAAD,UAAK,cAAC+D,EAAA,EAAD,CAAWL,KAAK,iBAAiBM,MAAM,kBAAkBnI,KAAK,SAASwE,SAAUkD,EAAchD,MAAOQ,EAAMsC,mBACjH,cAACrD,EAAA,EAAD,UAAK,cAAC+D,EAAA,EAAD,CAAWL,KAAK,YAAYM,MAAM,YAAYnI,KAAK,SAASwE,SAAUkD,EAAchD,MAAOQ,EAAMa,cACtG,cAAC5B,EAAA,EAAD,UAAK,cAAC+D,EAAA,EAAD,CAAWL,KAAK,gBAAgBM,MAAM,kBAAkBnI,KAAK,SAASwE,SAAUkD,EAAchD,MAAOQ,EAAMc,qBAEpH,cAACjC,EAAA,EAAD,UACI,cAACqE,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUrE,QAAS6D,EAArD,2B,kCExCNS,EAAQC,YAAe,CAC3BC,QAAS,CACPzI,KAAM,OACN0I,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,cAMZ,SAASE,IACP,OACE,eAACC,EAAA,EAAD,CAAeP,MAAOA,EAAtB,UACE,cAACQ,EAAA,EAAD,UACE,cAAC,EAAD,MAEF,cAACA,EAAA,EAAD,UACE,cAAC,EAAD,SAMRF,EAAIG,iBAAkB,EAEPH,QCxBAI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCLRQ,EAAe,GAiCNC,EA/BW,WAAmC,IAAlCzE,EAAiC,uDAAzBwE,EAAcE,EAAW,uCAC1D,OAAQA,EAAO5J,MACb,KAAKsD,EACD,MAAM,GAAN,mBACK4B,GADL,CAEE0E,EAAO/E,QAAQoD,WAInB,KAAKzE,EACH,MAAO,GAGT,KAAKD,EACH,OAAO2B,EAAMxD,KAAI,SAACmI,EAAMlF,GACtB,OAAIA,IAAUiF,EAAO/E,QAAQF,MACpBkF,EAEF,2BACFA,GADL,IAEEjF,MAAOgF,EAAO/E,QAAQD,WAK9B,QACE,OAAOM,IC3BE4E,cAAgB,CAAE9E,WAAY2E,ICA9BI,eAAYC,GCO3BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,GAAjB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.69db6275.chunk.js","sourcesContent":["import * as Tone from 'tone'\r\n\r\nconst gain = new Tone.Gain(0.2).toDestination();\r\nconst filter = new Tone.Filter({frequency: 1000, type: \"lowpass\", rolloff: -12, Q: 0}).connect(gain);\r\n\r\nconst synth = new Tone.PolySynth(Tone.Synth,{\r\n  oscillator : {\r\n    count: 2,\r\n    spread: 5,\r\n    type : \"sawtooth\",\r\n  },\r\n  // envelope: {\r\n  //   attack: 0.01,\r\n  //   decay: 15,\r\n  //   sustain: 0.20,\r\n  //   release: 0.1,\r\n  // },\r\n    envelope: {\r\n    attack: 0.002,\r\n    decay: 0,\r\n    sustain: 1,\r\n    release: 0.1,\r\n  },\r\n}).connect(filter);\r\n\r\nconst notesMap = [\r\n  'C',\r\n  'C#',\r\n  'D',\r\n  'D#',\r\n  'E',\r\n  'F',\r\n  'F#',\r\n  'G',\r\n  'G#',\r\n  'A',\r\n  'A#',\r\n  'B'\r\n]\r\n\r\nexport function playProgression(chords, rythm){\r\n  let lengths = rythm\r\n  let delay = 0\r\n  for(let i = 0; i<lengths.length; i++){\r\n      setTimeout(function(){ playChord(chords[i],lengths[i]); }, delay*1000);\r\n      delay += lengths[i]\r\n  }\r\n}\r\n\r\nexport function playChord(chord,duration){\r\n  const now = Tone.now()\r\n  const translatedNotes = translateNumbersIntoNotes(chord)\r\n  synth.triggerAttack(translatedNotes, now);\r\n  synth.releaseAll ( now + duration);\r\n}\r\n\r\nfunction translateNumbersIntoNotes(notes){\r\n  return notes.map(x => {\r\n    const octave = Math.floor(x/12);\r\n    const note = notesMap[x%12];\r\n    return note+octave.toString();\r\n  })\r\n}\r\n\r\nexport function noteOn(midiNote, duration) {\r\n\r\n  var ac = new window.AudioContext();\r\n  var o = ac.createOscillator();\r\n  var g = ac.createGain();\r\n  var f = ac.createBiquadFilter();\r\n  const freq = Math.pow(2, (midiNote-69)/12)*440;\r\n  o.frequency.value = freq;\r\n  o.type = 'sawtooth';\r\n  o.connect(g);\r\n  g.gain.value = 0.25;\r\n  g.connect(f);\r\n  f.frequency.value = 1000;\r\n  f.connect(ac.destination)\r\n  o.start(0);\r\n  setTimeout(function(s) {s.stop(0)}, duration, o);\r\n\r\n  // var ac = new (window.AudioContext || window.webkitAudioContext);\r\n  // var freqs = [261.63, 329.63, 392.00];\r\n  // for(var i=0;i<freqs.length;i++) {\r\n  //   var o = ac.createOscillator();\r\n  //   var g = ac.createGain();\r\n  //   o.frequency.value = freqs[i];\r\n  //   o.connect(g);\r\n  //   g.gain.value = 0.25;\r\n  //   g.connect(ac.destination);\r\n  //   o.start(0);\r\n  //   setTimeout(function(s) {s.stop(0)}, 1000, o);\r\n  // }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nfunction DisplayNotes({notes}){\r\n    const [cols, setCols] = useState([])\r\n    useEffect(() => {\r\n        const height = Math.max(...notes.chords.map(chord => Math.max(...chord)))\r\n        const baseLine = Math.min(...notes.chords.map(chord => Math.min(...chord)))\r\n        let cols=[]\r\n        let length = 0\r\n        for(let j = 0; j<notes.rythm.length; j++ ){\r\n            length+=notes.rythm[j]\r\n        }\r\n        for(let j = 0; j<notes.chords.length; j++ ){\r\n            const chord = notes.chords[j]\r\n            let rows = []\r\n            for(let i = baseLine; i<=height; i++ ){\r\n            if(chord.includes(i))\r\n                rows.push(\r\n                <div style={{height: (1/(height-baseLine)*100).toString()+'%', width:'100%', \"background-color\":'#c62828'}}>\r\n                </div>)\r\n            else\r\n                rows.push(\r\n                <div style={{height: (1/(height-baseLine)*100).toString()+'%', width:'100%'}}>\r\n                </div>)\r\n            }\r\n            cols.push(<div style={{height: '100%', width: (notes.rythm[j]/length*100).toString()+'%'}}>{rows.reverse()}</div>)\r\n        }\r\n        setCols(cols)\r\n      }, [notes]);\r\n  return cols;\r\n}\r\n\r\nexport default React.memo(DisplayNotes);","export const ADD_SPECIMAN = \"ADD_SPECIMAN\";\r\nexport const SET_SPECIMAN_SCORE = \"SET_SPECIMAN_SCORE\";\r\nexport const DELETE_POPULATION = \"DELETE_POPULATION\";","import React from 'react';\r\nimport {Container, Row, Col} from 'reactstrap'\r\nimport {playProgression} from '../sound/player'\r\nimport { useDispatch } from 'react-redux'\r\nimport Slider from '@material-ui/core/Slider';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\n\r\nimport DisplayNotes from './DisplayNotes'\r\nimport { setSpecimanScore} from '../actions/populationActions'\r\n\r\nfunction MidiDisplay(props){\r\n  const dispatch = useDispatch()\r\n\r\n  const setScore = (_, value) => {\r\n    dispatch(setSpecimanScore({index: props.index ,score: value}))\r\n  }\r\n\r\n  const play = () => {\r\n    playProgression(props.progression.notes.chords, props.progression.notes.rythm)\r\n  }\r\n\r\n  return (<Container className='p-0 h-100'>\r\n      <Row className='w-100 m-0 h-75'>\r\n          <DisplayNotes notes={props.progression.notes}/>\r\n          <div className='vote' onClick={play}><PlayCircleOutlineIcon style={{ fontSize: 80 }} className='vote-text'/></div>\r\n      </Row>\r\n      <Row>\r\n        <Col sm={3}>\r\n          <small>\r\n            Score\r\n          </small>\r\n        </Col>\r\n        <Col>\r\n        <Slider\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          min={0}\r\n          max={100}\r\n          onChange={setScore}\r\n          value={props.progression.score}\r\n        />\r\n        </Col>\r\n      </Row>\r\n  </Container>)\r\n}\r\n\r\nexport default React.memo(MidiDisplay);\r\n","import { ADD_SPECIMAN, SET_SPECIMAN_SCORE, DELETE_POPULATION } from \"./actionTypes.js\";\r\n\r\nexport const addSpeciman = (speciman) => ({ \r\n    type: ADD_SPECIMAN, \r\n    payload: { speciman } \r\n});\r\n\r\nexport const setSpecimanScore = ( {index, score} ) => ({ \r\n    type: SET_SPECIMAN_SCORE, \r\n    payload: { index, score } \r\n});\r\n\r\nexport const deletePopulation = ( ) => ({ \r\n    type: DELETE_POPULATION\r\n});","import React, {useState, useEffect} from 'react';\r\nimport MidiDisplay from './MidiDisplay';\r\nimport {Container, Row, Col} from 'reactstrap'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction Grid() {\r\n    const numberPerRow = 4;\r\n    const population = useSelector(state => {\r\n        return state.population\r\n    })\r\n\r\n\r\n    const [populationFormatted, setPopulationFormatted] = useState([])\r\n    useEffect(() => {\r\n        let arr = [...population];\r\n        let populationFormatted = []\r\n        while(arr.length) populationFormatted.push(arr.splice(0,numberPerRow));\r\n        setPopulationFormatted(populationFormatted)\r\n      }, [population]);\r\n\r\n  return (\r\n    <Container>\r\n        {populationFormatted.map((row,i) => {\r\n            return (\r\n                <Row key={i}>\r\n                    {\r\n                        row.map((progression,j) => {\r\n                            return (\r\n                            <Col key={j} style={{height:\"200px\"}}>\r\n                                <MidiDisplay progression={progression} index={i*numberPerRow+j}/>\r\n                            </Col>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            )\r\n        })}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Grid;\r\n","const rythms = [1/2,3/4,1,3/2,2,3,4]\r\n// const lengths = [2,4,8]\r\n\r\nexport function constructRythm(length){\r\n    let currentLength = 0;\r\n    let rythmStructure = []\r\n    while(currentLength<length){\r\n        let diff = 0 ;\r\n        let randomNumber = Math.floor(Math.random() * rythms.length)\r\n\r\n        if(currentLength+rythms[randomNumber]-diff>length){\r\n            diff = length - currentLength\r\n            currentLength+=diff\r\n            rythmStructure.push(diff)\r\n            return rythmStructure\r\n        }\r\n\r\n        currentLength+=rythms[randomNumber]-diff\r\n        rythmStructure.push(rythms[randomNumber]-diff)\r\n    }\r\n\r\n    return rythmStructure\r\n}","import {constructRythm} from './rythm'\r\n\r\nconst maj = 'major'\r\nconst min = 'minor'\r\n\r\n\r\nconst scales = {\r\n    major: {\r\n        notes: [0,2,4,5,7,9,11],\r\n        mode: [maj,min, min, maj, maj, min, min]\r\n    }\r\n}\r\n\r\nconst chords = {\r\n    major:[0,4,7,2,11,6,9,1,8,3,10,5],\r\n    minor:[0,3,7,2,10,5,9,4,11,6,8,1]\r\n}\r\n\r\n\r\nexport function createRandomProgression(jazziness, numberOfNotes){\r\n    let chords = []\r\n    let lengths = constructRythm(8)\r\n    for(let i = 0; i<lengths.length; i++){\r\n        chords.push(RandomChord(0,'major',numberOfNotes,jazziness+3))\r\n    }\r\n    const scale = Math.floor(Math.random() * 12)\r\n\r\n    chords = chords.map(chord => chord.map(note => note + scale))\r\n\r\n    return {chords, rythm: lengths}\r\n}\r\n\r\nexport function RandomChord(octave,scaleType,numberOfNotes, jazziness){\r\n    const scale = scales[scaleType]\r\n    const randomNote = Math.floor(Math.random() * scale.notes.length);\r\n\r\n    const mode = scale.mode[randomNote]\r\n    let rootNote = scale.notes[randomNote]\r\n\r\n    let chord = randomVoicing(rootNote,mode, numberOfNotes,scale.notes,jazziness,octave)\r\n\r\n    let transposed = chord.map(x => x + 36 + (12*octave))\r\n    if(Math.random()-(1/4)>rootNote/12)\r\n        rootNote+=12\r\n    // transposed.push(rootNote+24)\r\n    transposed.push(rootNote+12)\r\n\r\n    return transposed\r\n}\r\n\r\nfunction randomVoicing(root,mode,numberOfNotes, scale, jazziness=5, octave, dispersion = 0){\r\n    let chord = []\r\n    let overload=0\r\n    for(let i = 0; i<numberOfNotes; i++){\r\n        const choice = Math.floor(Math.random() * jazziness + Math.floor(overload/(jazziness*2)))\r\n        let note = chords[mode][choice];\r\n        note += root\r\n        if(Math.random()<(((choice/(1+octave))/12) - dispersion)){\r\n            console.log('dispersed up')\r\n            note+=12\r\n        }\r\n        if(Math.random()<(((note/2*(1+octave))/12) - dispersion) && choice!==0){\r\n            console.log('dispersed down')\r\n            note-=12\r\n        }\r\n\r\n        if (chord.includes(note) || !scale.includes(note%12))\r\n        {\r\n            overload++\r\n            i--\r\n            continue\r\n        }\r\n\r\n        chord.push(note)\r\n    }\r\n    return chord\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Container, Row, Col} from 'reactstrap'\r\nimport { useDispatch } from 'react-redux'\r\nimport {Button, TextField} from '@material-ui/core';\r\n\r\nimport {createPopulation} from '../genetic/population'\r\nimport {addSpeciman, deletePopulation} from '../actions/populationActions'\r\n\r\nfunction ControlPanel() {\r\n    const [generation, setGeneration] = useState(0)\r\n\r\n    const [state, setState] = useState({\r\n        populationSize: 16,\r\n        jazziness: 2,\r\n        numberOfNotes: 3,\r\n    })\r\n    const dispatch = useDispatch()\r\n\r\n    const handleChange = (e) => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    const restart = () => {\r\n        setGeneration(0)\r\n        dispatch(deletePopulation())\r\n        createPopulation(state.populationSize, state.jazziness, state.numberOfNotes).map(x => dispatch(addSpeciman(x)))\r\n    }\r\n\r\n    useEffect(() => {\r\n        restart()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      }, [state]);\r\n\r\n\r\n  return (\r\n    <Container>\r\n        <Row>\r\n            <h2>Generation: {generation}</h2>\r\n        </Row>\r\n        <Row className='p-5'>\r\n            <Col><TextField name='populationSize' label=\"Population size\" type=\"number\" onChange={handleChange} value={state.populationSize}/></Col>\r\n            <Col><TextField name='jazziness' label=\"Jazziness\" type=\"number\" onChange={handleChange} value={state.jazziness}/></Col>\r\n            <Col><TextField name='numberOfNotes' label=\"Number of notes\" type=\"number\" onChange={handleChange} value={state.numberOfNotes}/></Col>\r\n        </Row>\r\n        <Row>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={restart}>\r\n                Restart\r\n            </Button>\r\n        </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ControlPanel;\r\n","import {createRandomProgression} from '../sound/chords'\r\n\r\nexport function createPopulation(size,jazziness, numberOfNotes) {\r\n    const population = []\r\n\r\n    for(let i =0; i<size; i++){\r\n        population.push({notes: createRandomProgression(jazziness, numberOfNotes), score: 0})\r\n    }\r\n    return population\r\n}\r\n","import Grid from './Grid'\nimport ControlPanel from './ControlPanel'\nimport '../style/App.css';\nimport {Jumbotron} from 'reactstrap'\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#c62828',\n    },\n    secondary: {\n      main: '#181a1b'\n    },\n  },\n}\n);\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Jumbotron>\n        <ControlPanel/>\n      </Jumbotron>\n      <Jumbotron>\n        <Grid/>\n      </Jumbotron>\n    </ThemeProvider>\n  );\n}\n\nApp.whyDidYouRender = true\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_SPECIMAN, SET_SPECIMAN_SCORE, DELETE_POPULATION } from \"../actions/actionTypes\";\r\n\r\nconst initialState = [] ;\r\n\r\nconst populationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_SPECIMAN: {\r\n        return [\r\n          ...state,\r\n          action.payload.speciman\r\n        ];\r\n      }\r\n\r\n      case DELETE_POPULATION: {\r\n        return [];\r\n      }\r\n\r\n      case SET_SPECIMAN_SCORE:{\r\n        return state.map((item, index) => {\r\n          if (index !== action.payload.index) {\r\n            return item\r\n          }\r\n          return {\r\n            ...item,\r\n            score: action.payload.score\r\n          }\r\n        })\r\n      }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default populationReducer;\r\n","import { combineReducers } from 'redux';\r\nimport populationReducer from \"./populationReducer\";\r\n\r\nexport default combineReducers({ population: populationReducer });\r\n","import { createStore } from 'redux';\r\nimport rootReducer from \"../reducers/index\";\r\n\r\nexport default createStore(rootReducer);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}