{"version":3,"sources":["components/DisplayNotes.jsx","actions/actionTypes.js","actions/populationActions.js","components/MidiDisplay.jsx","components/Grid.jsx","genetic/genome.js","genetic/rythm.js","genetic/note.js","genetic/chords.js","genetic/synth.js","genetic/progression.js","genetic/population.js","components/NewGeneration.jsx","components/ControlPanel.jsx","components/Test.jsx","components/App.js","reportWebVitals.js","reducers/populationReducer.js","reducers/index.js","store/store.js","index.js"],"names":["DisplayNotes","progression","useState","cols","setCols","useEffect","height","Math","max","notes","map","chord","note","hight","root","baseLine","min","length","j","rythm","rows","i","includes","push","style","toString","width","reverse","Row","className","React","memo","ADD_SPECIMAN","SET_SPECIMAN_SCORE","DELETE_POPULATION","addSpeciman","speciman","type","payload","deletePopulation","MidiDisplay","index","dispatch","useDispatch","Container","color","onClick","play","fontSize","Col","sm","score","Slider","aria-labelledby","valueLabelDisplay","onChange","_","value","setSpecimanScore","Grid","population","useSelector","state","populationFormatted","setPopulationFormatted","arr","splice","Jumbotron","row","Genome","chords","scale","chordNotes","flat","Set","mean","reduce","a","b","this","switches","rythms","constructRythm","window","currentLength","rythmStructure","previousValue","diff","randomNumber","floor","random","beginning","notesMap","Note","start","duration","end","octave","maj","scales","major","mode","minor","RandomChord","scaleType","numberOfNotes","jazziness","randomNote","rootNote","transposed","dispersion","overload","choice","randomVoicing","x","gain","Tone","toDestination","filter","frequency","rolloff","Q","connect","synth","oscillator","count","spread","envelope","attack","decay","sustain","release","createRandomProgression","noteLengths","lengths","genome","Progression","getAllNotes","now","triggerAttack","triggerRelease","createRoulette","scores","pickSpeciman","roulette","pick","acc","cross","prog1","prog2","newScale","prog1Transposed","transpose","prog2Transposed","newRythm","notes1","notes2","timeline","ends","sort","round","crossRythms","newMelody","originalScale","newTimeline","newChords","candidates","forEach","existsInWindow","transposedRoot","indexOf","slice","crossMelodies","NewGeneration","updateGeneration","Button","variant","newPopulation","pick1","pick2","crossed","newGeneration","ControlPanel","generation","setGeneration","populationSize","setState","handleChange","e","target","name","restart","size","createPopulation","TextField","label","Test","child","setChild","theme","createMuiTheme","palette","primary","main","secondary","App","ThemeProvider","path","whyDidYouRender","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","populationReducer","action","item","combineReducers","createStore","rootReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.ab5eb35b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {Row} from 'reactstrap'\r\n\r\nexport function DisplayNotes({progression}){\r\n    const [cols, setCols] = useState([])\r\n    useEffect(() => {\r\n        const height = Math.max(...progression.notes.map(chord => Math.max(...chord.chord.map(note => note.hight), chord.root.hight)))\r\n        const baseLine = Math.min(...progression.notes.map(chord => Math.min(...chord.chord.map(note => note.hight), chord.root.hight)))\r\n        // const height = 60\r\n        // const baseLine = 24\r\n        let cols=[]\r\n        let length = 0\r\n        for(let j = 0; j<progression.rythm.length; j++ ){\r\n            length+=progression.rythm[j]\r\n        }\r\n        for(let j = 0; j<progression.notes.length; j++ ){\r\n            const chord = [...progression.notes[j].chord, progression.notes[j].root].map(note => note.hight)\r\n            let rows = []\r\n            for(let i = baseLine; i<=height; i++ ){\r\n                if(chord.includes(i))\r\n                    rows.push(\r\n                    <div key={j.toString()+i.toString()} style={{height: (1/(height-baseLine+1)*100).toString()+'%', width:'100%', \"backgroundColor\":'#c62828'}}>\r\n                    </div>)\r\n                else\r\n                    rows.push(\r\n                    <div key={j.toString()+i.toString()} style={{height: (1/(height-baseLine+1)*100).toString()+'%', width:'100%'}}>\r\n                    </div>)\r\n            }\r\n            cols.push(<div key={j} style={{height: '100%', width: (progression.rythm[j]/length*100).toString()+'%'}}>{rows.reverse()}</div>)\r\n        }\r\n        setCols(cols)\r\n      }, [progression]);\r\n  return (\r\n    <Row className='w-100 m-0 h-100'>\r\n     {cols}\r\n      </Row>\r\n      );\r\n}\r\n\r\nexport default React.memo(DisplayNotes);","export const ADD_SPECIMAN = \"ADD_SPECIMAN\";\r\nexport const SET_SPECIMAN_SCORE = \"SET_SPECIMAN_SCORE\";\r\nexport const DELETE_POPULATION = \"DELETE_POPULATION\";","import { ADD_SPECIMAN, SET_SPECIMAN_SCORE, DELETE_POPULATION } from \"./actionTypes.js\";\r\n\r\nexport const addSpeciman = (speciman) => ({ \r\n    type: ADD_SPECIMAN, \r\n    payload: { speciman } \r\n});\r\n\r\nexport const setSpecimanScore = ( {index, score} ) => ({ \r\n    type: SET_SPECIMAN_SCORE, \r\n    payload: { index, score } \r\n});\r\n\r\nexport const deletePopulation = ( ) => ({ \r\n    type: DELETE_POPULATION\r\n});","import React from 'react';\r\nimport {Container, Row, Col} from 'reactstrap'\r\nimport { useDispatch } from 'react-redux'\r\nimport Slider from '@material-ui/core/Slider';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\n\r\nimport DisplayNotes from './DisplayNotes'\r\nimport { setSpecimanScore} from '../actions/populationActions'\r\n\r\nfunction MidiDisplay({progression, index}){\r\n  const dispatch = useDispatch()\r\n\r\n  const setScore = (_, value) => {\r\n    dispatch(setSpecimanScore({index: index ,score: value}))\r\n  }\r\n\r\n  const play = () => {\r\n    progression.play()\r\n  }\r\n\r\n  return (\r\n  <Container className='p-0 h-100'>\r\n      <Row className='w-100 m-0 h-75'>\r\n          <DisplayNotes color='#c62828' progression={progression} />\r\n          <div className='vote' onClick={play}><PlayCircleOutlineIcon style={{ fontSize: 80 }} className='vote-text'/></div>\r\n      </Row>\r\n      <Row>\r\n        <Col sm={3}>\r\n          <small>\r\n            Score\r\n          </small>\r\n        </Col>\r\n        <Col sm={1} className='pl-2'>\r\n          <small>\r\n            {progression.score}\r\n          </small>\r\n        </Col>\r\n        <Col className='pl-2'>\r\n        <Slider\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          min={0}\r\n          max={100}\r\n          onChange={setScore}\r\n          value={progression.score}\r\n        />\r\n        </Col>\r\n      </Row>\r\n  </Container>)\r\n}\r\n\r\nexport default React.memo(MidiDisplay);\r\n","import React, {useState, useEffect} from 'react';\r\nimport MidiDisplay from './MidiDisplay';\r\nimport {Jumbotron, Container, Row, Col} from 'reactstrap'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction Grid() {\r\n    const numberPerRow = 4;\r\n    const population = useSelector(state => {\r\n        return state.population\r\n    })\r\n\r\n    const [populationFormatted, setPopulationFormatted] = useState([])\r\n    useEffect(() => {\r\n        let arr = [...population];\r\n        let populationFormatted = []\r\n        while(arr.length) populationFormatted.push(arr.splice(0,numberPerRow));\r\n        setPopulationFormatted(populationFormatted)\r\n      }, [population]);\r\n\r\n  return (\r\n    <Jumbotron>\r\n        <Container>\r\n            {populationFormatted.map((row,i) => {\r\n                return (\r\n                    <Row key={i}>\r\n                        {\r\n                            row.map((progression,j) => {\r\n                                return (\r\n                                <Col key={j} style={{height:\"200px\"}}>\r\n                                    <MidiDisplay progression={progression} index={i*numberPerRow+j}/>\r\n                                </Col>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Row>\r\n                )\r\n            })}\r\n        </Container>\r\n    </Jumbotron>\r\n  );\r\n}\r\n\r\nexport default Grid;\r\n","export class Genome{\r\n    constructor(chords, rythm, scale){\r\n        let chordNotes = chords.map(chord => chord.chord)\r\n        if(!chordNotes.flat()){\r\n            chordNotes = chords.map(chord => chord.root)\r\n        }\r\n        const notes = [...new Set(chordNotes.flat())]\r\n        let mean = notes.reduce((a, b) => a + b) / notes.length;\r\n        const length = rythm.reduce((a, b) => a + b);\r\n        \r\n        this.scale= scale\r\n        this.length= length\r\n        this.notes= notes\r\n        this.switches= rythm.length\r\n        this.mean= mean\r\n    }\r\n}","\r\nconst rythms = [1/8,1/4,1/2,3/4,1,3/2,2,3,4]\r\n// const lengths = [2,4,8]\r\n\r\nexport function constructRythm(length, window){\r\n    window=window-rythms.length+1\r\n    let currentLength = 0;\r\n    let rythmStructure = []\r\n    let previousValue= 0\r\n\r\n    const max = Math.min(rythms.length-1 + window,rythms.length-1)\r\n    const min = Math.max(window,0)\r\n    while(currentLength<length){\r\n        let diff = 0 ;\r\n        let randomNumber = Math.floor(Math.random() *  (max-min))+min \r\n        if(Math.random()<0.4 && previousValue!==0){\r\n            randomNumber = previousValue\r\n        } else {\r\n            previousValue = randomNumber\r\n        }\r\n\r\n        if(currentLength+rythms[randomNumber]-diff>length){\r\n            diff = length - currentLength\r\n            rythmStructure.push({rythm: diff,beginning: currentLength})\r\n            currentLength+=diff\r\n            return rythmStructure\r\n        }\r\n\r\n        rythmStructure.push({rythm: rythms[randomNumber]-diff,beginning: currentLength})\r\n        currentLength+=rythms[randomNumber]-diff\r\n    }\r\n\r\n    return rythmStructure\r\n}","const notesMap = [\r\n    'C',\r\n    'C#',\r\n    'D',\r\n    'D#',\r\n    'E',\r\n    'F',\r\n    'F#',\r\n    'G',\r\n    'G#',\r\n    'A',\r\n    'A#',\r\n    'B'\r\n  ]\r\n\r\nexport class Note{\r\n    constructor(hight, start, duration) {\r\n        this.hight = hight\r\n        this.start = start\r\n        this.end = start+duration\r\n        this.duration = duration\r\n\r\n        const octave = Math.floor(hight/12);\r\n        const note = notesMap[hight%12];\r\n        this.note = note+octave.toString();\r\n    }\r\n\r\n    existsInWindow(window){\r\n        if((window[0]>this.start && window[0]<this.end)||(window[1]>this.start && window[1]<=this.end)){\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n}","const maj = 'major'\r\nconst min = 'minor'\r\n\r\n\r\nexport const scales = {\r\n    major: {\r\n        notes: [0,2,4,5,7,9,11],\r\n        mode: [maj,min, min, maj, maj, min, min]\r\n    }\r\n}\r\n\r\nexport const chords = {\r\n    major:[0,4,7,2,11,6,9,1,8,3,10,5],\r\n    minor:[0,3,7,2,10,5,9,4,11,6,8,1]\r\n}\r\n\r\nexport function RandomChord(octave,scaleType,numberOfNotes, jazziness){\r\n    const scale = scales[scaleType]\r\n    const randomNote = Math.floor(Math.random() * scale.notes.length);\r\n\r\n    const mode = scale.mode[randomNote]\r\n    let rootNote = scale.notes[randomNote]\r\n\r\n    if(numberOfNotes===0){\r\n        rootNote+=12*3\r\n        return {root: rootNote, chord: []}\r\n    }\r\n    let chord = randomVoicing(rootNote,mode, numberOfNotes,scale.notes,jazziness,octave)\r\n\r\n    let transposed = chord.map(x => x + 12*(3+octave))\r\n    if(Math.random()-(1/4)>rootNote/12)\r\n        rootNote+=12\r\n\r\n    return {chord: transposed, root: rootNote+12}\r\n}\r\n\r\nfunction randomVoicing(root,mode,numberOfNotes, scale, jazziness=5, octave, dispersion = 0){\r\n    let chord = []\r\n    let overload=0\r\n    for(let i = 0; i<numberOfNotes; i++){\r\n        const choice = Math.floor(Math.random() * jazziness + Math.floor(overload/(jazziness*2)))\r\n        let note = chords[mode][choice];\r\n        note += root\r\n        if(Math.random()<(((choice/(1+octave))/12) - dispersion)){\r\n            note+=12\r\n        }\r\n        if(Math.random()<(((note/2*(1+octave))/12) - dispersion) && choice!==0){\r\n            note-=12\r\n        }\r\n\r\n        if (chord.includes(note) || !scale.includes(note%12))\r\n        {\r\n            overload++\r\n            i--\r\n            continue\r\n        }\r\n        overload=0\r\n        chord.push(note)\r\n    }\r\n    return chord\r\n}","import * as Tone from 'tone'\r\n\r\nconst gain = new Tone.Gain(0.2).toDestination();\r\nconst filter = new Tone.Filter({frequency: 1000, type: \"lowpass\", rolloff: -12, Q: 0}).connect(gain);\r\n\r\nexport const synth = new Tone.PolySynth(Tone.Synth,{\r\n  oscillator : {\r\n    count: 2,\r\n    spread: 5,\r\n    type : \"sawtooth\",\r\n  },\r\n  // envelope: {\r\n  //   attack: 0.01,\r\n  //   decay: 15,\r\n  //   sustain: 0.20,\r\n  //   release: 0.1,\r\n  // },\r\n    envelope: {\r\n    attack: 0.002,\r\n    decay: 0,\r\n    sustain: 1,\r\n    release: 0.1,\r\n  },\r\n}).connect(filter);\r\n","import { Genome } from './genome'\r\nimport {constructRythm} from './rythm'\r\nimport { Note } from './note'\r\nimport { RandomChord } from './chords'\r\nimport { synth } from './synth'\r\nimport * as Tone from 'tone'\r\n\r\nexport function createRandomProgression(jazziness, numberOfNotes, noteLengths=0){\r\n    let octave = 0\r\n    let notes = []\r\n    let lengths = constructRythm(8, noteLengths)\r\n    const scale = Math.floor(Math.random() * 12)\r\n    for(let i = 0; i<lengths.length; i++){\r\n        const chord = RandomChord(octave,'major',numberOfNotes-1,jazziness)\r\n        notes.push({chord: chord.chord.map(x=>new Note(x+scale,lengths[i].beginning, lengths[i].rythm)), root: new Note(chord.root+scale,lengths[i].beginning, lengths[i].rythm)})\r\n    }\r\n        \r\n    const genome = new Genome(notes, lengths, scale)\r\n    return new Progression({notes: notes, rythm: lengths.map(x=>x.rythm), genome: genome })\r\n}\r\n\r\nexport class Progression{\r\n    constructor({rythm, genome, score= 10, notes}){\r\n        this.notes = notes\r\n        this.rythm = rythm\r\n        this.genome = genome\r\n        this.score = score\r\n    }\r\n\r\n    getAllNotes(){\r\n        return this.notes.map(chord => [...chord.chord, chord.root]).flat()\r\n    }\r\n\r\n    play(){\r\n        const notes = this.getAllNotes()\r\n        const now = Tone.now()\r\n        for(let i = 0; i<notes.length; i++){\r\n          synth.triggerAttack(notes[i].note, now+notes[i].start);\r\n          synth.triggerRelease([notes[i].note],now+notes[i].end);\r\n        }\r\n      }\r\n\r\n    transpose(scale){\r\n        const diff = scale - this.genome.scale\r\n        const notes = this.notes.map(chord => { return {chord: chord.chord.map(x=>new Note(x.hight+diff, x.start, x.duration)), root: new Note(chord.root.hight+diff, chord.root.start, chord.root.duration)}})\r\n        const genome = new Genome(notes, this.rythm, this.genome.scale + diff)\r\n        return new Progression({...this,genome, notes })\r\n    }\r\n}\r\n","import {createRandomProgression, Progression} from './progression'\r\nimport { Genome } from './genome'\r\nimport { Note } from './note'\r\nimport {scales, chords} from './chords'\r\n\r\nexport function createPopulation(size,jazziness, numberOfNotes, noteLengths) {\r\n    const population = []\r\n\r\n    for(let i =0; i<size; i++){\r\n        population.push(createRandomProgression(jazziness, numberOfNotes, noteLengths))\r\n    }\r\n    return population\r\n}\r\n\r\nexport function newGeneration(population){\r\n    let newPopulation = []\r\n    for(let i = 0; i<population.length; i++){\r\n        const roulette = createRoulette(population.map(x => x.score))\r\n\r\n        const pick1 = pickSpeciman(roulette)\r\n        const pick2 = pickSpeciman(roulette)\r\n\r\n        const spec1 = population[pick1]\r\n        const spec2 = population[pick2]\r\n    \r\n        const crossed = cross(spec1,spec2)\r\n        newPopulation.push(crossed)\r\n    }\r\n    return newPopulation\r\n}\r\n\r\nfunction createRoulette(scores){\r\n    const max = scores.reduce((a, b) => a + b);\r\n    const probabilities = scores.map(score => score/max)\r\n    return probabilities\r\n}\r\n\r\nfunction pickSpeciman(roulette){\r\n    const pick = Math.random();\r\n    let acc = 0\r\n    let i = 0\r\n    while(acc<pick){\r\n        acc += roulette[i]\r\n        i++\r\n    }\r\n    return i-1\r\n}\r\n\r\nexport function cross(prog1, prog2){\r\n    const max = Math.max(prog1.genome.scale, prog2.genome.scale)\r\n    const min = Math.min(prog1.genome.scale, prog2.genome.scale)\r\n\r\n    const newScale = Math.floor(Math.random() * (max - min)) + min;\r\n\r\n    const prog1Transposed = prog1.transpose(newScale)\r\n    const prog2Transposed = prog2.transpose(newScale)\r\n\r\n    const length = 8\r\n    const newRythm = crossRythms(prog1Transposed.getAllNotes(), prog2Transposed.getAllNotes(), length)\r\n\r\n    const newMelody = crossMelodies(prog1Transposed, prog2Transposed, newRythm, newScale, prog1.notes[0].chord.length,3)\r\n\r\n    let notes = [] \r\n    let beginning = 0\r\n    for(let i = 0; i<newRythm.length; i++){\r\n        const chord = newMelody[i]\r\n        notes.push({chord: chord.chord.map(x=>new Note(x,beginning, newRythm[i])), root: new Note(chord.root,beginning, newRythm[i])}) // eslint-disable-line\r\n        beginning+=newRythm[i]\r\n    }\r\n        \r\n    const genome = new Genome(notes, newRythm, newScale)\r\n    return new Progression({notes: notes, rythm: newRythm, genome: genome })\r\n}\r\n\r\nfunction crossMelodies(notes1, notes2, newRythm, originalScale, numberOfNotes, jazziness){\r\n    let newTimeline = 0\r\n    let newChords = []\r\n    for(let i=0; i<newRythm.length; i++){\r\n        const window=[newTimeline, newTimeline+newRythm[i]]\r\n\r\n        let candidates = []\r\n        notes1.notes.forEach(chord => {\r\n            if(chord.root.existsInWindow(window))\r\n                return candidates.push(chord.root)\r\n            return null\r\n        })\r\n\r\n        notes2.notes.forEach(chord => {\r\n            if(chord.root.existsInWindow(window))\r\n                return candidates.push(chord.root)\r\n            return null\r\n        })\r\n\r\n        candidates =  [...new Set(candidates)]\r\n\r\n        const choice = Math.floor(Math.random()*candidates.length)\r\n        const root = candidates[choice].hight\r\n\r\n        candidates = []\r\n        notes2.notes.forEach(chord => {\r\n            chord.chord.forEach(note => {\r\n            if(note.existsInWindow(window))\r\n                return candidates.push(note)\r\n            return null\r\n            })\r\n        })\r\n\r\n        notes1.notes.forEach(chord => {\r\n            chord.chord.forEach(note => {\r\n            if(note.existsInWindow(window))\r\n                return candidates.push(note)\r\n            return null\r\n            })\r\n        })\r\n\r\n        candidates =  [...new Set(candidates)]\r\n\r\n        const scale = scales['major']\r\n        const transposedRoot = (root-originalScale)%12\r\n        const mode = scale.mode[scale.notes.indexOf(transposedRoot)]\r\n\r\n        let chord = []\r\n        let overload=0\r\n        for(let j = 0 ; j<numberOfNotes; j++ ){\r\n            //const choice = Math.floor(Math.random() * jazziness + Math.floor(overload/(jazziness*2)))\r\n            const choice = candidates[Math.floor(Math.random()*candidates.length)].hight\r\n            if (chord.includes(choice) || !chords[mode].slice(0,jazziness + Math.floor(overload/(jazziness*2))).includes(((choice-root)%12)))\r\n            {\r\n                overload++\r\n                j--\r\n                continue\r\n            }\r\n            overload=0\r\n            chord.push(choice)\r\n        }\r\n        newChords.push({chord,root})\r\n        newTimeline += newRythm[i]\r\n    }\r\n    return newChords\r\n}\r\n\r\nfunction crossRythms(notes1, notes2, length){\r\n    let newRythm = []\r\n    let timeline = 0\r\n    let ends = [notes1.map(note => note.end).sort(),notes2.map(note => note.end).sort()]\r\n\r\n    while(timeline<length){\r\n        let choice = Math.round(Math.random())\r\n        for(let i = 0; i< ends[choice].length; i++){\r\n            if(ends[choice][i]>timeline){\r\n                newRythm.push(ends[choice][i]-timeline)\r\n                timeline = ends[choice][i]\r\n                break;\r\n            }\r\n            if(i===ends[choice].length-1){\r\n                newRythm.push(ends[choice][i]-timeline)\r\n                timeline = ends[choice][i]\r\n            }\r\n        }\r\n    }\r\n    return newRythm\r\n}\r\n","import React from 'react';\r\nimport {Button} from '@material-ui/core';\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { newGeneration} from '../genetic/population'\r\nimport {addSpeciman, deletePopulation} from '../actions/populationActions'\r\n\r\nfunction NewGeneration({updateGeneration}){\r\n  const dispatch = useDispatch()\r\n  \r\n    const population = useSelector(state => {\r\n        return state.population\r\n    })\r\n\r\n    const nextGen = () => {\r\n        dispatch(deletePopulation())\r\n        newGeneration(population).map(x => dispatch(addSpeciman(x)))\r\n        updateGeneration()\r\n    }\r\n\r\n  return (\r\n    <Button variant=\"contained\" color=\"primary\" onClick={nextGen}>\r\n        Evolve\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default NewGeneration;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Jumbotron, Container, Row, Col} from 'reactstrap'\r\nimport { useDispatch } from 'react-redux'\r\nimport {Button, TextField} from '@material-ui/core';\r\n\r\nimport {createPopulation} from '../genetic/population'\r\nimport {addSpeciman, deletePopulation} from '../actions/populationActions'\r\nimport NewGeneration from './NewGeneration'\r\n\r\nfunction ControlPanel() {\r\n    const [generation, setGeneration] = useState(0)\r\n\r\n    const [state, setState] = useState({\r\n        populationSize: 8,\r\n        jazziness: 4,\r\n        numberOfNotes: 3,\r\n        noteLengths: 12,\r\n    })\r\n    const dispatch = useDispatch()\r\n\r\n    const handleChange = (e) => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    const updateGeneration = () => {\r\n        setGeneration(generation+1)\r\n    }\r\n\r\n    const restart = () => {\r\n        setGeneration(0)\r\n        dispatch(deletePopulation())\r\n        createPopulation(state.populationSize, state.jazziness, state.numberOfNotes, state.noteLengths).map(x => dispatch(addSpeciman(x)))\r\n    }\r\n\r\n    useEffect(() => {\r\n        restart()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      }, [state]);\r\n\r\n\r\n  return (\r\n    <Jumbotron>\r\n        <Container>\r\n            <Row>\r\n                <h2>Generation: {generation}</h2>\r\n            </Row>\r\n            <Row className='p-5'>\r\n                <Col><TextField name='populationSize' label=\"Population size\" type=\"number\" onChange={handleChange} value={state.populationSize}/></Col>\r\n                <Col><TextField name='jazziness' label=\"Jazziness\" type=\"number\" onChange={handleChange} value={state.jazziness}/></Col>\r\n                <Col><TextField name='numberOfNotes' label=\"Number of notes\" type=\"number\" onChange={handleChange} value={state.numberOfNotes}/></Col> \r\n                <Col><TextField name='noteLengths' label=\"Note lengths\" type=\"number\" onChange={handleChange} value={state.noteLengths}/></Col>\r\n            </Row>\r\n            <Row>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={restart}>\r\n                    Restart\r\n                </Button>\r\n                <NewGeneration updateGeneration={updateGeneration}/>\r\n            </Row>\r\n        </Container>\r\n    </Jumbotron>\r\n  );\r\n}\r\n\r\nexport default ControlPanel;\r\n","import React, {useEffect, useState} from 'react';\r\nimport MidiDisplay from './MidiDisplay';\r\nimport {Jumbotron, Container, Row, Col} from 'reactstrap'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { cross } from '../genetic/population'\r\n\r\nfunction Test() {\r\n\r\n    const [child, setChild] = useState(null)\r\n    const population = useSelector(state => {\r\n        return state.population\r\n    })\r\n\r\n    useEffect(() => {\r\n        if(population.length>1){\r\n            setChild(cross(population[0], population[1]))\r\n        }\r\n      }, [population]);\r\n    // population[0].notes = population[0].notes.map(x=>x.map(x=>50))\r\n    // population[0].notes2 = population[0].notes2.map(x=> x= new Note(50, x.start, x.duration))\r\n\r\nif (!child){\r\n    return null\r\n}\r\n  return (\r\n    <Jumbotron>\r\n        <Container>\r\n            <Row className='p-3'>\r\n                <Col><h2>Debug</h2></Col>\r\n            </Row>\r\n            <Row className='p-3'>\r\n                <h4>Parent 1:</h4>\r\n            </Row>\r\n            <Row>\r\n                <Col style={{height:\"300px\"}}>\r\n                    <MidiDisplay progression={population[0]} index={0}/>\r\n                </Col>\r\n            </Row>\r\n            <Row className='p-3'>\r\n                <h4>Parent 2:</h4>\r\n            </Row>\r\n            <Row>\r\n                <Col style={{height:\"300px\"}}>\r\n                    <MidiDisplay progression={population[1]} index={1}/>\r\n                </Col>\r\n            </Row>\r\n            <Row className='p-3'>\r\n                <h4>Child:</h4>\r\n            </Row>\r\n            <Row>\r\n                <Col style={{height:\"300px\"}}>\r\n                    <MidiDisplay progression={child}/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </Jumbotron>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n","import Grid from './Grid'\nimport ControlPanel from './ControlPanel'\nimport Test from './Test'\nimport '../style/App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#c62828',\n    },\n    secondary: {\n      main: '#181a1b'\n    },\n  },\n}\n);\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <ControlPanel/>\n      <Router>\n        <Switch>\n          <Route path=\"/test\">\n            <Test />\n          </Route>\n          <Route path=\"/\">\n            <Grid />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nApp.whyDidYouRender = true\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_SPECIMAN, SET_SPECIMAN_SCORE, DELETE_POPULATION } from \"../actions/actionTypes\";\r\nimport {Progression} from '../genetic/progression'\r\n\r\nconst initialState = [] ;\r\n\r\nconst populationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_SPECIMAN: {\r\n        return [\r\n          ...state,\r\n          action.payload.speciman\r\n        ];\r\n      }\r\n\r\n      case DELETE_POPULATION: {\r\n        return [];\r\n      }\r\n\r\n      case SET_SPECIMAN_SCORE:{\r\n        return state.map((item, index) => {\r\n          if (index !== action.payload.index) {\r\n            return item\r\n          }\r\n          return new Progression({\r\n            ...item,\r\n            score: action.payload.score\r\n          })\r\n        })\r\n      }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default populationReducer;\r\n","import { combineReducers } from 'redux';\r\nimport populationReducer from \"./populationReducer\";\r\n\r\nexport default combineReducers({ population: populationReducer });\r\n","import { createStore } from 'redux';\r\nimport rootReducer from \"../reducers/index\";\r\n\r\nexport default createStore(rootReducer);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}