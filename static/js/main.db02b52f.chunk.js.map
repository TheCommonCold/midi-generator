{"version":3,"sources":["components/DisplayNotes.jsx","actions/actionTypes.js","actions/populationActions.js","components/MidiDisplay.jsx","components/Grid.jsx","genetic/genome.js","genetic/rythm.js","genetic/note.js","genetic/chords.js","genetic/synth.js","genetic/progression.js","genetic/population.js","components/NewGeneration.jsx","components/ControlPanel.jsx","components/Test.jsx","components/App.js","reportWebVitals.js","reducers/populationReducer.js","reducers/index.js","store/store.js","index.js"],"names":["DisplayNotes","progression","useState","cols","setCols","useEffect","height","Math","max","notes","map","chord","note","hight","root","baseLine","min","length","j","rythm","rows","i","includes","push","style","toString","width","reverse","Row","className","React","memo","ADD_SPECIMAN","SET_SPECIMAN_SCORE","DELETE_POPULATION","addSpeciman","speciman","type","payload","deletePopulation","MidiDisplay","index","dispatch","useDispatch","Container","color","onClick","play","fontSize","download","Col","sm","score","Slider","aria-labelledby","valueLabelDisplay","onChange","_","value","setSpecimanScore","Grid","population","useSelector","state","populationFormatted","setPopulationFormatted","arr","splice","Jumbotron","row","Genome","chords","scale","chordNotes","flat","reduce","a","b","this","switches","rythms","mapRythm","input","output","sum","rythmMap","currentValue","parseInt","constructRythm","window","currentLength","rythmStructure","previousValue","diff","randomNumber","floor","random","beginning","notesMap","Note","start","duration","end","octave","maj","scales","major","mode","minor","RandomChord","scaleType","numberOfNotes","jazziness","randomNote","rootNote","transposed","dispersion","overload","choice","randomVoicing","x","gain","Tone","toDestination","filter","frequency","rolloff","Q","connect","isPlaying","tempo","setPlaying","getTempo","synth","oscillator","count","spread","envelope","attack","decay","sustain","release","createRandomProgression","noteLengths","progressionLength","lengths","genome","Progression","getAllNotes","now","triggerAttack","triggerRelease","setTimeout","JSON","stringify","thisNotes","counter","track","midiWriter","Track","addEvent","NoteEvent","pitch","event","sequential","blob","write","Writer","Blob","buildFile","FileSaver","saveAs","mutationChance","mutateScale","mutateRythm","mutateMelody","p","newRythm","tmp","newScale","transpose","joinChord","tempNewRythm","tempNotes","breakChord","avaibleRythms","forEach","round","chordsToJoin","constructVoicing","createRoulette","scores","pickSpeciman","roulette","pick","acc","cross","prog1","prog2","prog1Transposed","prog2Transposed","notes1","notes2","timeline","ends","sort","crossRythms","newNotes","buildNotes","originalScale","newTimeline","newChords","candidates","existsInWindow","Set","crossMelodies","transposedRoot","indexOf","slice","NewGeneration","updateGeneration","params","Button","variant","newPopulation","pick1","pick2","mutated","mutate","decision","compare","newGeneration","windowmin","windowmax","ControlPanel","generation","setGeneration","populationSize","setState","settempo","disabled","handleChange","e","contraint","target","name","restart","size","createPopulation","TextField","label","Test","child","setChild","theme","createMuiTheme","palette","primary","main","secondary","App","ThemeProvider","path","whyDidYouRender","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","populationReducer","action","item","combineReducers","createStore","rootReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.db02b52f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {Row} from 'reactstrap'\r\n\r\nexport function DisplayNotes({progression}){\r\n    const [cols, setCols] = useState([])\r\n    useEffect(() => {\r\n        const height = Math.max(...progression.notes.map(chord => Math.max(...chord.chord.map(note => note.hight), chord.root.hight)))\r\n        const baseLine = Math.min(...progression.notes.map(chord => Math.min(...chord.chord.map(note => note.hight), chord.root.hight)))\r\n        // const height = 60\r\n        // const baseLine = 24\r\n        let cols=[]\r\n        let length = 0\r\n        for(let j = 0; j<progression.rythm.length; j++ ){\r\n            length+=progression.rythm[j]\r\n        }\r\n        for(let j = 0; j<progression.notes.length; j++ ){\r\n            const chord = [...progression.notes[j].chord, progression.notes[j].root].map(note => note.hight)\r\n            let rows = []\r\n            for(let i = baseLine; i<=height; i++ ){\r\n                if(chord.includes(i))\r\n                    rows.push(\r\n                    <div key={j.toString()+i.toString()} style={{height: (1/(height-baseLine+1)*100).toString()+'%', width:'100%', \"backgroundColor\":'#c62828'}}>\r\n                    </div>)\r\n                else\r\n                    rows.push(\r\n                    <div key={j.toString()+i.toString()} style={{height: (1/(height-baseLine+1)*100).toString()+'%', width:'100%'}}>\r\n                    </div>)\r\n            }\r\n            cols.push(<div key={j} style={{height: '100%', width: (progression.rythm[j]/length*100).toString()+'%'}}>{rows.reverse()}</div>)\r\n        }\r\n        setCols(cols)\r\n      }, [progression]);\r\n  return (\r\n    <Row className='w-100 m-0 h-100'>\r\n     {cols}\r\n      </Row>\r\n      );\r\n}\r\n\r\nexport default React.memo(DisplayNotes);","export const ADD_SPECIMAN = \"ADD_SPECIMAN\";\r\nexport const SET_SPECIMAN_SCORE = \"SET_SPECIMAN_SCORE\";\r\nexport const DELETE_POPULATION = \"DELETE_POPULATION\";","import { ADD_SPECIMAN, SET_SPECIMAN_SCORE, DELETE_POPULATION } from \"./actionTypes.js\";\r\n\r\nexport const addSpeciman = (speciman) => ({ \r\n    type: ADD_SPECIMAN, \r\n    payload: { speciman } \r\n});\r\n\r\nexport const setSpecimanScore = ( {index, score} ) => ({ \r\n    type: SET_SPECIMAN_SCORE, \r\n    payload: { index, score } \r\n});\r\n\r\nexport const deletePopulation = ( ) => ({ \r\n    type: DELETE_POPULATION\r\n});","import React from 'react';\r\nimport {Container, Row, Col} from 'reactstrap'\r\nimport { useDispatch } from 'react-redux'\r\nimport Slider from '@material-ui/core/Slider';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\n\r\nimport DisplayNotes from './DisplayNotes'\r\nimport { setSpecimanScore} from '../actions/populationActions'\r\n\r\nfunction MidiDisplay({progression, index}){\r\n  const dispatch = useDispatch()\r\n\r\n  const setScore = (_, value) => {\r\n    dispatch(setSpecimanScore({index: index ,score: value}))\r\n  }\r\n\r\n  const play = () => {\r\n    progression.play()\r\n  }\r\n\r\n  const download = () => {\r\n    progression.download()\r\n  }\r\n\r\n  return (\r\n  <Container className='p-0 h-100'>\r\n      <Row className='w-100 m-0 h-75'>\r\n          <DisplayNotes color='#c62828' progression={progression} />\r\n          <div className='vote' onClick={play}><PlayCircleOutlineIcon style={{ fontSize: 80 }} className='vote-text'/></div>\r\n          <div className='download' onClick={download}><SaveAltIcon style={{ fontSize: 20 }} className='vote-text'/></div>\r\n      </Row>\r\n      <Row>\r\n        <Col sm={3}>\r\n          <small>\r\n            Score\r\n          </small>\r\n        </Col>\r\n        <Col sm={1} className='pl-2'>\r\n          <small>\r\n            {progression.score}\r\n          </small>\r\n        </Col>\r\n        <Col className='pl-2'>\r\n        <Slider\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          min={0}\r\n          max={100}\r\n          onChange={setScore}\r\n          value={progression.score}\r\n        />\r\n        </Col>\r\n      </Row>\r\n  </Container>)\r\n}\r\n\r\nexport default React.memo(MidiDisplay);\r\n","import React, {useState, useEffect} from 'react';\r\nimport MidiDisplay from './MidiDisplay';\r\nimport {Jumbotron, Container, Row, Col} from 'reactstrap'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction Grid() {\r\n    const numberPerRow = 4;\r\n    const population = useSelector(state => {\r\n        return state.population\r\n    })\r\n\r\n    const [populationFormatted, setPopulationFormatted] = useState([])\r\n    useEffect(() => {\r\n        let arr = [...population];\r\n        let populationFormatted = []\r\n        while(arr.length) populationFormatted.push(arr.splice(0,numberPerRow));\r\n        setPopulationFormatted(populationFormatted)\r\n      }, [population]);\r\n\r\n  return (\r\n    <Jumbotron>\r\n        <Container>\r\n            {populationFormatted.map((row,i) => {\r\n                return (\r\n                    <Row key={i}>\r\n                        {\r\n                            row.map((progression,j) => {\r\n                                return (\r\n                                <Col key={j} style={{height:\"200px\"}}>\r\n                                    <MidiDisplay progression={progression} index={i*numberPerRow+j}/>\r\n                                </Col>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Row>\r\n                )\r\n            })}\r\n        </Container>\r\n    </Jumbotron>\r\n  );\r\n}\r\n\r\nexport default Grid;\r\n","export class Genome{\r\n    constructor(chords, rythm, scale){\r\n        let chordNotes = chords.map(chord => chord.chord)\r\n        if(!chordNotes.flat()){\r\n            chordNotes = chords.map(chord => chord.root)\r\n        }\r\n        //const notes = [...new Set(chordNotes.flat())]\r\n        //let mean = notes.reduce((a, b) => a + b) / notes.length;\r\n        const length = rythm.reduce((a, b) => a + b);\r\n        \r\n        this.scale= scale\r\n        this.length= length\r\n        this.switches= rythm.length\r\n        //this.mean= mean\r\n    }\r\n}","export const rythms = [\r\n    1/8,\r\n    1/4,\r\n    1/2,\r\n    3/4,\r\n    1,\r\n    2,\r\n    3,\r\n    4\r\n]\r\n\r\nexport function mapRythm(input){\r\n    let output = []\r\n    let sum = input\r\n    while(sum!==0){\r\n        for(let i = rythmMap.length-1; i >= 0; i--){\r\n            const currentValue = 1/parseInt(rythmMap[i])\r\n            if(sum>=currentValue){\r\n                output.push(rythmMap[i])\r\n                sum-=currentValue\r\n                break\r\n            }\r\n        }\r\n    }\r\n    return output\r\n}\r\n\r\nexport const rythmMap = [\r\n    '64',\r\n    '32',\r\n    '16',\r\n    '8',\r\n    '4',\r\n    '2',\r\n    '1',\r\n]\r\n// const lengths = [2,4,8]\r\n\r\nexport function constructRythm(length, window){\r\n    let currentLength = 0;\r\n    let rythmStructure = []\r\n    let previousValue= 0\r\n\r\n    const max = window.max\r\n    const min = window.min\r\n    while(currentLength<length){\r\n        let diff = 0 ;\r\n        let randomNumber = Math.floor(Math.random() *  (max-min))+min \r\n        if(Math.random()<0.4 && previousValue!==0){\r\n            randomNumber = previousValue\r\n        } else {\r\n            previousValue = randomNumber\r\n        }\r\n\r\n        if(currentLength+rythms[randomNumber]-diff>length){\r\n            diff = length - currentLength\r\n            rythmStructure.push({rythm: diff,beginning: currentLength})\r\n            currentLength+=diff\r\n            return rythmStructure\r\n        }\r\n\r\n        rythmStructure.push({rythm: rythms[randomNumber]-diff,beginning: currentLength})\r\n        currentLength+=rythms[randomNumber]-diff\r\n    }\r\n\r\n    return rythmStructure\r\n}","const notesMap = [\r\n    'C',\r\n    'C#',\r\n    'D',\r\n    'D#',\r\n    'E',\r\n    'F',\r\n    'F#',\r\n    'G',\r\n    'G#',\r\n    'A',\r\n    'A#',\r\n    'B'\r\n  ]\r\n\r\nexport class Note{\r\n    constructor(hight, start, duration) {\r\n        this.hight = hight\r\n        this.start = start\r\n        this.end = start+duration\r\n        this.duration = duration\r\n\r\n        const octave = Math.floor(hight/12);\r\n        const note = notesMap[hight%12];\r\n        this.note = note+octave.toString();\r\n    }\r\n\r\n    existsInWindow(window){\r\n        if((window[0]>this.start && window[0]<this.end)||(window[1]>this.start && window[1]<=this.end)){\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n}","const maj = 'major'\r\nconst min = 'minor'\r\n\r\n\r\nexport const scales = {\r\n    major: {\r\n        notes: [0,2,4,5,7,9,11],\r\n        mode: [maj,min, min, maj, maj, min, min]\r\n    }\r\n}\r\n\r\nexport const chords = {\r\n    major:[0,4,7,2,11,6,9,1,8,3,10,5],\r\n    minor:[0,3,7,2,10,5,9,4,11,6,8,1]\r\n}\r\n\r\nexport function RandomChord(octave,scaleType,numberOfNotes, jazziness){\r\n    const scale = scales[scaleType]\r\n    const randomNote = Math.floor(Math.random() * scale.notes.length);\r\n\r\n    const mode = scale.mode[randomNote]\r\n    let rootNote = scale.notes[randomNote]\r\n\r\n    if(numberOfNotes===0){\r\n        rootNote+=12*3\r\n        return {root: rootNote, chord: []}\r\n    }\r\n    let chord = randomVoicing(rootNote,mode, numberOfNotes,scale.notes,jazziness,octave)\r\n\r\n    let transposed = chord.map(x => x + 12*(3+octave))\r\n    if(Math.random()-(1/4)>rootNote/12)\r\n        rootNote+=12\r\n\r\n    return {chord: transposed, root: rootNote+12}\r\n}\r\n\r\nfunction randomVoicing(root,mode,numberOfNotes, scale, jazziness=5, octave, dispersion = 0){\r\n    let chord = []\r\n    let overload=0\r\n    for(let i = 0; i<numberOfNotes; i++){\r\n        const choice = Math.floor(Math.random() * jazziness + Math.floor(overload/(jazziness*2)))\r\n        let note = chords[mode][choice];\r\n        note += root\r\n        if(Math.random()<(((choice/(1+octave))/12) - dispersion)){\r\n            note+=12\r\n        }\r\n        if(Math.random()<(((note/2*(1+octave))/12) - dispersion) && choice!==0){\r\n            note-=12\r\n        }\r\n\r\n        if (chord.includes(note) || !scale.includes(note%12))\r\n        {\r\n            overload++\r\n            i--\r\n            continue\r\n        }\r\n        overload=0\r\n        chord.push(note)\r\n    }\r\n    return chord\r\n}","import * as Tone from 'tone'\r\n\r\nconst gain = new Tone.Gain(0.2).toDestination();\r\nconst filter = new Tone.Filter({frequency: 1000, type: \"lowpass\", rolloff: -12, Q: 0}).connect(gain);\r\n\r\nvar isPlaying = 0\r\nvar tempo = 120\r\n\r\nexport function getPlaying(){\r\n  return isPlaying\r\n}\r\n\r\nexport function setPlaying(x) {\r\n  isPlaying=x\r\n} \r\n\r\nexport function getTempo(){\r\n  return tempo\r\n}\r\n\r\nexport function setTempo(x) {\r\n  tempo=x\r\n} \r\n\r\nexport const synth = new Tone.PolySynth(Tone.Synth,{\r\n  oscillator : {\r\n    count: 2,\r\n    spread: 5,\r\n    type : \"sawtooth\",\r\n  },\r\n  // envelope: {\r\n  //   attack: 0.01,\r\n  //   decay: 15,\r\n  //   sustain: 0.20,\r\n  //   release: 0.1,\r\n  // },\r\n    envelope: {\r\n    attack: 0.002,\r\n    decay: 0,\r\n    sustain: 1,\r\n    release: 0.1,\r\n  },\r\n}).connect(filter);\r\n","import { Genome } from './genome'\r\nimport {constructRythm, rythms, mapRythm} from './rythm'\r\nimport { Note } from './note'\r\nimport { RandomChord } from './chords'\r\nimport { synth, getPlaying, setPlaying, getTempo } from './synth'\r\nimport {constructVoicing} from './population'\r\nimport * as Tone from 'tone'\r\nimport midiWriter  from 'midi-writer-js'; \r\nimport FileSaver from 'file-saver';\r\n\r\nexport function createRandomProgression(jazziness, numberOfNotes, noteLengths=0, progressionLength){\r\n    let octave = 0\r\n    let notes = []\r\n    let lengths = constructRythm(progressionLength, noteLengths)\r\n    const scale = Math.floor(Math.random() * 12)\r\n    for(let i = 0; i<lengths.length; i++){\r\n        const chord = RandomChord(octave,'major',numberOfNotes-1,jazziness)\r\n        notes.push({chord: chord.chord.map(x=>new Note(x+scale,lengths[i].beginning, lengths[i].rythm)), root: new Note(chord.root+scale,lengths[i].beginning, lengths[i].rythm)})\r\n    }\r\n        \r\n    const genome = new Genome(notes, lengths, scale)\r\n    return new Progression({notes: notes, rythm: lengths.map(x=>x.rythm), genome: genome })\r\n}\r\n\r\nexport class Progression{\r\n    constructor({rythm, genome, score= 10, notes}){\r\n        this.notes = notes\r\n        this.rythm = rythm\r\n        this.genome = genome\r\n        this.score = score\r\n    }\r\n\r\n    getAllNotes(){\r\n        return this.notes.map(chord => [...chord.chord, chord.root]).flat()\r\n    }\r\n\r\n    play(){\r\n        if(!getPlaying()){\r\n            setPlaying(1)\r\n            let end = 0\r\n            const notes = this.getAllNotes()\r\n            const now = Tone.now()\r\n            for(let i = 0; i<notes.length; i++){\r\n              synth.triggerAttack(notes[i].note, now+(notes[i].start*2*120/getTempo()));\r\n              synth.triggerRelease([notes[i].note],now+(notes[i].end*2*120/getTempo()));\r\n              if(notes[i].end>end)\r\n                end=notes[i].end\r\n            }\r\n            setTimeout(function(){ setPlaying(0) }, end*2*1000*120/getTempo());\r\n        }\r\n    }\r\n\r\n    compare(progression){\r\n        const notes = progression.getAllNotes().map(note => JSON.stringify(note))\r\n        const thisNotes = this.getAllNotes().map(note => JSON.stringify(note))\r\n        let counter = 0\r\n        for(let i=0; i<notes.length; i++){\r\n            if(thisNotes.includes(notes[i]))\r\n                counter++\r\n        }\r\n        if(counter===notes.length)\r\n            return true\r\n        return false\r\n    }\r\n\r\n    download(){\r\n        var track = new midiWriter.Track();\r\n        \r\n        for(let i = 0; i<this.notes.length;i++){\r\n            track.addEvent([\r\n                new midiWriter.NoteEvent({pitch: [...this.notes[i].chord.map(x => x.note), this.notes[i].root.note], duration: mapRythm(this.rythm[i])}),\r\n            ], function(event, index) {\r\n            return {sequential: false};\r\n        });\r\n        }\r\n\r\n        var write = new midiWriter.Writer(track);\r\n        let blob;\r\n        blob = new Blob([ write.buildFile() ], {\r\n            type: 'audio/midi'\r\n          });\r\n        FileSaver.saveAs(blob, 'midi');\r\n    }\r\n\r\n    transpose(scale){\r\n        const diff = scale - this.genome.scale\r\n        const notes = this.notes.map(chord => { return {chord: chord.chord.map(x=>new Note(x.hight+diff, x.start, x.duration)), root: new Note(chord.root.hight+diff, chord.root.start, chord.root.duration)}})\r\n        const genome = new Genome(notes, this.rythm, this.genome.scale + diff)\r\n        return new Progression({...this,genome, notes })\r\n    }\r\n\r\n    mutate(jazziness, noteLengths, mutationChance){\r\n        let newProgression = this.mutateScale()\r\n        newProgression = this.mutateRythm(mutationChance,jazziness, noteLengths)\r\n        newProgression = this.mutateMelody(mutationChance,jazziness)\r\n        return newProgression\r\n    }\r\n\r\n    mutateMelody(p,jazziness){\r\n        let newRythm = []\r\n        let notes = []\r\n        let beginning = 0\r\n        for(let i = 0; i<this.rythm.length; i++){\r\n            if(Math.random()<p && i<this.rythm.length-1){\r\n                const tmp = RandomChord(0,'major',this.notes[0].chord.length,jazziness)\r\n                const root = new Note(tmp.root+this.genome.scale, beginning, this.rythm[i])\r\n                const chord = tmp.chord.map(x=>x+this.genome.scale)\r\n                // eslint-disable-next-line no-loop-func\r\n                notes.push({chord: chord.map(note => new Note(note,beginning,this.rythm[i])), root: new Note(root.hight, beginning, this.rythm[i])})\r\n                newRythm.push(this.rythm[i])\r\n                beginning+=this.rythm[i]\r\n                continue\r\n            }\r\n            newRythm.push(this.rythm[i])\r\n            beginning+=this.rythm[i]\r\n            notes.push(this.notes[i])\r\n        }\r\n        const genome = new Genome(notes, newRythm, this.genome.scale)\r\n        return new Progression({...this,genome, notes, rythm: newRythm })\r\n    }\r\n\r\n    mutateScale(){\r\n        const newScale = Math.floor(Math.random()*3)-1+this.genome.scale\r\n        return this.transpose(newScale)\r\n    }\r\n\r\n    mutateRythm(p,jazziness, window){\r\n        let temp\r\n        const [tempNewRythm, tempNotes] = this.joinChord(p,jazziness)\r\n        temp = new Progression({...this, notes: tempNotes, rythm: tempNewRythm })\r\n        const [newRythm, notes] = temp.breakChord(p,jazziness, window)\r\n        const genome = new Genome(notes, newRythm, this.genome.scale)\r\n        return new Progression({...this,genome, notes, rythm: newRythm })\r\n    }\r\n\r\n    breakChord(p,jazziness, window){\r\n        let newRythm = []\r\n        let notes = []\r\n        let beginning = 0\r\n        const max = window.max\r\n        const min = window.min\r\n        for(let i = 0; i<this.rythm.length; i++){\r\n            let avaibleRythms = []\r\n            rythms.forEach((x,index) => {\r\n                if(x<this.rythm[i]&&index<max&&index>=min)\r\n                    avaibleRythms.push(x)\r\n            })\r\n            if(Math.random()<p && avaibleRythms.length>0){\r\n                const choice = avaibleRythms[Math.floor(Math.random()*avaibleRythms.length)]\r\n\r\n                const tmp = RandomChord(0,'major',this.notes[0].chord.length,jazziness)\r\n                const root = new Note(tmp.root+this.genome.scale, beginning, this.rythm[i])\r\n                const chord = tmp.chord.map(x=>x+this.genome.scale)\r\n                \r\n                if(Math.round(Math.random())<=2){\r\n                    notes.push({\r\n                        // eslint-disable-next-line no-loop-func\r\n                        chord: this.notes[i].chord.map(note => new Note(note.hight,beginning,choice)), \r\n                        root: new Note(this.notes[i].root.hight, beginning, choice)})\r\n                    notes.push({\r\n                        // eslint-disable-next-line no-loop-func\r\n                        chord: chord.map(note => new Note(note,beginning+choice,this.rythm[i]-choice)), \r\n                        root: new Note(root.hight, beginning+choice, this.rythm[i]-choice)})\r\n                    newRythm.push(this.rythm[i]-choice)\r\n                    newRythm.push(choice)\r\n                    }else{\r\n                    // eslint-disable-next-line no-loop-func\r\n                    notes.push({chord: chord.map(note => new Note(note,beginning,choice)), root: new Note(root.hight, beginning, choice)})\r\n                    // eslint-disable-next-line no-loop-func\r\n                    notes.push({chord: this.notes[i].chord.map(note => new Note(note.hight,beginning+choice,this.rythm[i]-choice)), root: new Note(this.notes[i].root.hight, beginning+choice, this.rythm[i]-choice)})\r\n                    newRythm.push(choice)\r\n                    newRythm.push(this.rythm[i]-choice)\r\n                }\r\n\r\n                beginning+=this.rythm[i]\r\n                continue\r\n            }\r\n            newRythm.push(this.rythm[i])\r\n            beginning+=this.rythm[i]\r\n            notes.push(this.notes[i])\r\n        }\r\n        return [newRythm, notes]\r\n    }\r\n\r\n    joinChord(p,jazziness) {\r\n        let newRythm = []\r\n        let notes = []\r\n        let beginning = 0\r\n        for(let i = 0; i<this.rythm.length; i++){\r\n            if(Math.random()<p && i<this.rythm.length-1){\r\n                const chordsToJoin = [...this.notes[i].chord, ...this.notes[i+1].chord]\r\n                const root = this.notes[i+Math.round(Math.random())].root\r\n                const chord = constructVoicing(chordsToJoin, root, this.genome.scale,jazziness,this.notes[i].chord.length)\r\n                // eslint-disable-next-line no-loop-func\r\n                notes.push({chord: chord.map(note => new Note(note,beginning,this.rythm[i]+this.rythm[i+1])), root: new Note(root.hight, beginning, this.rythm[i]+this.rythm[i+1])})\r\n                newRythm.push(this.rythm[i]+this.rythm[i+1])\r\n                beginning+=this.rythm[i]+this.rythm[i+1]\r\n                i++\r\n                continue\r\n            }\r\n            newRythm.push(this.rythm[i])\r\n            beginning+=this.rythm[i]\r\n            notes.push(this.notes[i])\r\n        }\r\n        return [newRythm, notes]\r\n    }\r\n}\r\n","import {createRandomProgression, Progression} from './progression'\r\nimport { Genome } from './genome'\r\nimport { Note } from './note'\r\nimport {scales, chords} from './chords'\r\n\r\nexport function createPopulation(size,jazziness, numberOfNotes, noteLengths, progressionLength) {\r\n    const population = []\r\n\r\n    for(let i =0; i<size; i++){\r\n        population.push(createRandomProgression(jazziness, numberOfNotes, noteLengths, progressionLength))\r\n    }\r\n    return population\r\n}\r\n\r\nexport function newGeneration(population, jazziness, noteLengths, length, mutationChance){\r\n    let newPopulation = []\r\n    for(let i = 0; i<population.length; i++){\r\n        const roulette = createRoulette(population.map(x => x.score))\r\n\r\n        const pick1 = pickSpeciman(roulette)\r\n        const pick2 = pickSpeciman(roulette)\r\n\r\n        const spec1 = population[pick1]\r\n        const spec2 = population[pick2]\r\n    \r\n        const crossed = cross(spec1,spec2, jazziness, length)\r\n        const mutated = crossed.mutate(jazziness, noteLengths, mutationChance)\r\n\r\n        let decision = 1\r\n        for(let j = 0; j<newPopulation.length; j++){\r\n            if(newPopulation[j].compare(mutated)){\r\n                i--\r\n                decision = 0\r\n                break\r\n            }\r\n        }\r\n        if(decision===1)\r\n            newPopulation.push(mutated)\r\n    }\r\n    return newPopulation\r\n}\r\n\r\nfunction createRoulette(scores){\r\n    const max = scores.reduce((a, b) => a + b);\r\n    const probabilities = scores.map(score => score/max)\r\n    return probabilities\r\n}\r\n\r\nfunction pickSpeciman(roulette){\r\n    const pick = Math.random();\r\n    let acc = 0\r\n    let i = 0\r\n    while(acc<pick){\r\n        acc += roulette[i]\r\n        i++\r\n    }\r\n    return i-1\r\n}\r\n\r\nexport function cross(prog1, prog2, jazziness, length){\r\n    const max = Math.max(prog1.genome.scale, prog2.genome.scale)\r\n    const min = Math.min(prog1.genome.scale, prog2.genome.scale)\r\n\r\n    const newScale = Math.floor(Math.random() * (max - min)) + min;\r\n\r\n    const prog1Transposed = prog1.transpose(newScale)\r\n    const prog2Transposed = prog2.transpose(newScale)\r\n\r\n    const newRythm = crossRythms(prog1Transposed.getAllNotes(), prog2Transposed.getAllNotes(), length)\r\n\r\n    const newMelody = crossMelodies(prog1Transposed, prog2Transposed, newRythm, newScale, prog1.notes[0].chord.length,jazziness)\r\n\r\n    const notes = buildNotes(newRythm, newMelody)\r\n\r\n    const genome = new Genome(notes, newRythm, newScale)\r\n    return new Progression({notes: notes, rythm: newRythm, genome: genome })\r\n}\r\n\r\nfunction crossMelodies(notes1, notes2, newRythm, originalScale, numberOfNotes, jazziness){\r\n    let newTimeline = 0\r\n    let newChords = []\r\n    for(let i=0; i<newRythm.length; i++){\r\n        const window=[newTimeline, newTimeline+newRythm[i]]\r\n\r\n        let candidates = []\r\n        notes1.notes.forEach(chord => {\r\n            if(chord.root.existsInWindow(window))\r\n                return candidates.push(chord.root)\r\n            return null\r\n        })\r\n\r\n        notes2.notes.forEach(chord => {\r\n            if(chord.root.existsInWindow(window))\r\n                return candidates.push(chord.root)\r\n            return null\r\n        })\r\n\r\n        candidates =  [...new Set(candidates)]\r\n\r\n        const choice = Math.floor(Math.random()*candidates.length)\r\n        const root = candidates[choice]\r\n\r\n        candidates = []\r\n        notes2.notes.forEach(chord => {\r\n            chord.chord.forEach(note => {\r\n            if(note.existsInWindow(window))\r\n                return candidates.push(note)\r\n            return null\r\n            })\r\n        })\r\n\r\n        notes1.notes.forEach(chord => {\r\n            chord.chord.forEach(note => {\r\n            if(note.existsInWindow(window))\r\n                return candidates.push(note)\r\n            return null\r\n            })\r\n        })\r\n\r\n        candidates =  [...new Set(candidates)]\r\n        const chord = constructVoicing(candidates, root, originalScale, jazziness, numberOfNotes)\r\n\r\n        newChords.push({chord,root:root.hight})\r\n        newTimeline += newRythm[i]\r\n    }\r\n    return newChords\r\n}\r\n\r\nexport function buildNotes(rythm, notes){\r\n    let newNotes = [] \r\n    let beginning = 0\r\n    for(let i = 0; i<rythm.length; i++){\r\n        const chord = notes[i]\r\n        newNotes.push({chord: chord.chord.map(x=>new Note(x,beginning, rythm[i])), root: new Note(chord.root,beginning, rythm[i])}) // eslint-disable-line\r\n        beginning+=rythm[i]\r\n    }\r\n    return newNotes\r\n}\r\n\r\nexport function constructVoicing(candidates, root, originalScale, jazziness, numberOfNotes){\r\n    const scale = scales['major']\r\n    const transposedRoot = (root.hight-originalScale)%12\r\n    const mode = scale.mode[scale.notes.indexOf(transposedRoot)]\r\n    let chord = []\r\n    let overload=0\r\n    for(let j = 0 ; j<numberOfNotes; j++ ){\r\n        const choice = candidates[Math.floor(Math.random()*candidates.length)].hight\r\n        if (chord.includes(choice) || !chords[mode].slice(0,jazziness + Math.floor(overload/(jazziness*2))).includes(((choice-root.hight)%12)))\r\n        {\r\n            overload++\r\n            j--\r\n            continue\r\n        }\r\n        overload=0\r\n        chord.push(choice)\r\n    }\r\n    return chord\r\n}\r\n\r\nfunction crossRythms(notes1, notes2, length){\r\n    let newRythm = []\r\n    let timeline = 0\r\n    let ends = [notes1.map(note => note.end).sort(),notes2.map(note => note.end).sort()]\r\n\r\n    while(timeline<length){\r\n        let choice = Math.round(Math.random())\r\n        for(let i = 0; i< ends[choice].length; i++){\r\n            if(ends[choice][i]>timeline){\r\n                newRythm.push(ends[choice][i]-timeline)\r\n                timeline = ends[choice][i]\r\n                break;\r\n            }\r\n            if(i===ends[choice].length-1){\r\n                newRythm.push(ends[choice][i]-timeline)\r\n                timeline = ends[choice][i]\r\n            }\r\n        }\r\n    }\r\n    return newRythm\r\n}\r\n","import React from 'react';\r\nimport {Button} from '@material-ui/core';\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { newGeneration} from '../genetic/population'\r\nimport {addSpeciman, deletePopulation} from '../actions/populationActions'\r\n\r\nfunction NewGeneration({updateGeneration, params}){\r\n  const dispatch = useDispatch()\r\n  \r\n    const population = useSelector(state => {\r\n        return state.population\r\n    })\r\n\r\n    const nextGen = () => {\r\n        dispatch(deletePopulation())\r\n        newGeneration(population, params.jazziness, {min:params.windowmin,max:params.windowmax},params.progressionLength, params.mutationChance).map(x => dispatch(addSpeciman(x)))\r\n        updateGeneration()\r\n    }\r\n\r\n  return (\r\n    <Button variant=\"contained\" color=\"primary\" onClick={nextGen}>\r\n        Evolve\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default NewGeneration;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Jumbotron, Container, Row, Col} from 'reactstrap'\r\nimport { useDispatch } from 'react-redux'\r\nimport {Button, TextField} from '@material-ui/core';\r\n\r\nimport {createPopulation} from '../genetic/population'\r\nimport {addSpeciman, deletePopulation} from '../actions/populationActions'\r\nimport NewGeneration from './NewGeneration'\r\nimport { setTempo } from '../genetic/synth'\r\nimport {rythms} from '../genetic/rythm'\r\n\r\nfunction ControlPanel() {\r\n    const [generation, setGeneration] = useState(0)\r\n\r\n    const [state, setState] = useState({\r\n        populationSize: 8,\r\n        mutationChance: 0.1,\r\n        jazziness: 5,\r\n        numberOfNotes: 4,\r\n        progressionLength: 4,\r\n        windowmin:4,\r\n        windowmax:6\r\n    })\r\n\r\n    const [tempo, settempo] = useState(120)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    let disabled = 0\r\n    if(generation>0)\r\n        disabled = 1\r\n\r\n    const handleChange = (e) => {\r\n\r\n        let contraint = false\r\n        const value = parseInt(e.target.value)\r\n\r\n        if(e.target.name === 'windowmin'){\r\n            if(value>state.windowmax || value<0)\r\n                contraint = true\r\n        }\r\n        if(e.target.name === 'windowmax'){\r\n            if(value<state.windowmin || value>=rythms.length)\r\n                contraint = true\r\n        }\r\n\r\n        if(e.target.name==='tempo'){\r\n            settempo(value)\r\n            setTempo(value)\r\n        }\r\n        else\r\n            if(!contraint)\r\n                setState({\r\n                    ...state,\r\n                    [e.target.name]: parseInt(e.target.value)\r\n                });\r\n    }\r\n\r\n    const updateGeneration = () => {\r\n        setGeneration(generation+1)\r\n    }\r\n\r\n    const restart = () => {\r\n        setGeneration(0)\r\n        dispatch(deletePopulation())\r\n        createPopulation(state.populationSize, state.jazziness, state.numberOfNotes, {min:state.windowmin,max:state.windowmax}, state.progressionLength).map(x => dispatch(addSpeciman(x)))\r\n    }\r\n\r\n    useEffect(() => {\r\n        restart()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      }, [state]);\r\n\r\n\r\n  return (\r\n    <Jumbotron>\r\n        <Container>\r\n            <Row>\r\n                <h2>Generation: {generation}</h2>\r\n            </Row>\r\n            <Row className='p-5'>\r\n                <Col><TextField name='tempo' label=\"Tempo\" type=\"number\" onChange={handleChange} value={tempo}/></Col>\r\n                <Col><TextField disabled={disabled} name='progressionLength' label=\"Progression Length\" type=\"number\" onChange={handleChange} value={state.progressionLength}/></Col>\r\n                <Col><TextField disabled={disabled} name='populationSize' label=\"Population size\" type=\"number\" onChange={handleChange} value={state.populationSize}/></Col>\r\n                <Col><TextField disabled={disabled} name='mutationChance' label=\"Mutation chance\" type=\"number\" onChange={handleChange} value={state.mutationChance}/></Col>\r\n            </Row>\r\n            <Row className='p-5'>\r\n                        <Col>\r\n                        <TextField disabled={disabled} name='windowmin' label=\"Min note len\" type=\"number\" onChange={handleChange} value={state.windowmin}/>\r\n                        </Col>\r\n                        <Col>\r\n                        <TextField disabled={disabled} name='windowmax' label=\"Max note len\" type=\"number\" onChange={handleChange} value={state.windowmax}/>\r\n                        </Col>\r\n                        <Col>\r\n                        <TextField disabled={disabled} name='jazziness' label=\"Jazziness\" type=\"number\" onChange={handleChange} value={state.jazziness}/>\r\n                        </Col>\r\n                        <Col>\r\n                        <TextField disabled={disabled} name='numberOfNotes' label=\"Number of notes\" type=\"number\" onChange={handleChange} value={state.numberOfNotes}/>\r\n                        </Col> \r\n                    </Row>\r\n            <Row>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={restart}>\r\n                    Restart\r\n                </Button>\r\n                <NewGeneration updateGeneration={updateGeneration} params={state}/>\r\n            </Row>\r\n        </Container>\r\n    </Jumbotron>\r\n  );\r\n}\r\n\r\nexport default ControlPanel;\r\n","import React, {useEffect, useState} from 'react';\r\nimport MidiDisplay from './MidiDisplay';\r\nimport {Jumbotron, Container, Row, Col} from 'reactstrap'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { cross } from '../genetic/population'\r\n\r\nfunction Test() {\r\n\r\n    const [child, setChild] = useState(null)\r\n    const population = useSelector(state => {\r\n        return state.population\r\n    })\r\n\r\n    useEffect(() => {\r\n        if(population.length>1){\r\n            setChild(cross(population[0], population[1]))\r\n        }\r\n      }, [population]);\r\n    // population[0].notes = population[0].notes.map(x=>x.map(x=>50))\r\n    // population[0].notes2 = population[0].notes2.map(x=> x= new Note(50, x.start, x.duration))\r\n\r\nif (!child){\r\n    return null\r\n}\r\n  return (\r\n    <Jumbotron>\r\n        <Container>\r\n            <Row className='p-3'>\r\n                <Col><h2>Debug</h2></Col>\r\n            </Row>\r\n            <Row className='p-3'>\r\n                <h4>Parent 1:</h4>\r\n            </Row>\r\n            <Row>\r\n                <Col style={{height:\"300px\"}}>\r\n                    <MidiDisplay progression={population[0]} index={0}/>\r\n                </Col>\r\n            </Row>\r\n            <Row className='p-3'>\r\n                <h4>Parent 2:</h4>\r\n            </Row>\r\n            <Row>\r\n                <Col style={{height:\"300px\"}}>\r\n                    <MidiDisplay progression={population[1]} index={1}/>\r\n                </Col>\r\n            </Row>\r\n            <Row className='p-3'>\r\n                <h4>Child:</h4>\r\n            </Row>\r\n            <Row>\r\n                <Col style={{height:\"300px\"}}>\r\n                    <MidiDisplay progression={child}/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </Jumbotron>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n","import Grid from './Grid'\nimport ControlPanel from './ControlPanel'\nimport Test from './Test'\nimport '../style/App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#c62828',\n    },\n    secondary: {\n      main: '#181a1b'\n    },\n  },\n}\n);\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <ControlPanel/>\n      <Router>\n        <Switch>\n          <Route path=\"/test\">\n            <Test />\n          </Route>\n          <Route path=\"/\">\n            <Grid />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nApp.whyDidYouRender = true\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_SPECIMAN, SET_SPECIMAN_SCORE, DELETE_POPULATION } from \"../actions/actionTypes\";\r\nimport {Progression} from '../genetic/progression'\r\n\r\nconst initialState = [] ;\r\n\r\nconst populationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_SPECIMAN: {\r\n        return [\r\n          ...state,\r\n          action.payload.speciman\r\n        ];\r\n      }\r\n\r\n      case DELETE_POPULATION: {\r\n        return [];\r\n      }\r\n\r\n      case SET_SPECIMAN_SCORE:{\r\n        return state.map((item, index) => {\r\n          if (index !== action.payload.index) {\r\n            return item\r\n          }\r\n          return new Progression({\r\n            ...item,\r\n            score: action.payload.score\r\n          })\r\n        })\r\n      }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default populationReducer;\r\n","import { combineReducers } from 'redux';\r\nimport populationReducer from \"./populationReducer\";\r\n\r\nexport default combineReducers({ population: populationReducer });\r\n","import { createStore } from 'redux';\r\nimport rootReducer from \"../reducers/index\";\r\n\r\nexport default createStore(rootReducer);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}