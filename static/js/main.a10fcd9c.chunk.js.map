{"version":3,"sources":["components/DisplayNotes.jsx","actions/actionTypes.js","actions/populationActions.js","components/MidiDisplay.jsx","components/Grid.jsx","genetic/genome.js","genetic/rythm.js","genetic/note.js","genetic/chords.js","genetic/synth.js","genetic/progression.js","genetic/population.js","components/NewGeneration.jsx","components/ControlPanel.jsx","components/Test.jsx","components/App.js","reportWebVitals.js","reducers/populationReducer.js","reducers/index.js","store/store.js","index.js"],"names":["DisplayNotes","progression","useState","cols","setCols","useEffect","height","Math","max","notes","map","chord","note","hight","root","baseLine","min","length","j","rythm","rows","i","includes","push","style","toString","width","reverse","Row","className","React","memo","ADD_SPECIMAN","SET_SPECIMAN_SCORE","DELETE_POPULATION","addSpeciman","speciman","type","payload","setSpecimanScore","index","score","deletePopulation","MidiDisplay","dispatch","useDispatch","scoreMeter","tempScore","Container","color","onClick","play","fontSize","download","Grid","population","useSelector","state","populationFormatted","setPopulationFormatted","arr","splice","Jumbotron","row","Col","Genome","chords","scale","chordNotes","flat","reduce","a","b","this","switches","rythms","mapRythm","input","output","sum","rythmMap","currentValue","parseInt","constructRythm","window","currentLength","rythmStructure","previousValue","diff","randomNumber","floor","random","beginning","notesMap","Note","start","duration","end","octave","maj","scales","major","mode","minor","RandomChord","scaleType","numberOfNotes","jazziness","randomNote","rootNote","transposed","dispersion","overload","choice","randomVoicing","x","gain","Tone","toDestination","filter","frequency","rolloff","Q","connect","isPlaying","tempo","setPlaying","getTempo","synth","oscillator","count","spread","envelope","attack","decay","sustain","release","createRandomProgression","noteLengths","progressionLength","lengths","genome","Progression","getAllNotes","now","triggerAttack","triggerRelease","setTimeout","JSON","stringify","thisNotes","counter","track","midiWriter","Track","addEvent","NoteEvent","pitch","event","sequential","blob","write","Writer","Blob","buildFile","FileSaver","saveAs","mutationChance","mutateScale","mutateRythm","mutateMelody","p","newRythm","tmp","newScale","transpose","joinChord","tempNewRythm","tempNotes","breakChord","avaibleRythms","forEach","round","chordsToJoin","constructVoicing","createRoulette","scores","pickSpeciman","roulette","pick","acc","cross","prog1","prog2","prog1Transposed","prog2Transposed","notes1","notes2","timeline","ends","sort","crossRythms","newNotes","buildNotes","originalScale","newTimeline","newChords","candidates","existsInWindow","Set","crossMelodies","transposedRoot","indexOf","slice","NewGeneration","updateGeneration","params","Button","variant","newPopulation","pick1","pick2","mutated","mutate","decision","compare","newGeneration","windowmin","windowmax","ControlPanel","generation","setGeneration","populationSize","setState","settempo","disabled","handleChange","e","value","parseFloat","target","name","restart","size","createPopulation","TextField","InputProps","inputProps","label","onChange","InputLabel","shrink","Select","MenuItem","Test","child","setChild","theme","createMuiTheme","palette","primary","main","secondary","App","ThemeProvider","path","whyDidYouRender","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","populationReducer","action","item","combineReducers","createStore","rootReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"qUAGO,SAASA,EAAT,GAAqC,IAAdC,EAAa,EAAbA,YAAa,EACfC,mBAAS,IADM,mBAChCC,EADgC,KAC1BC,EAD0B,KA6BzC,OA3BEC,qBAAU,WAON,IANA,IAAMC,EAASC,KAAKC,IAAL,MAAAD,KAAI,YAAQN,EAAYQ,MAAMC,KAAI,SAAAC,GAAK,OAAIJ,KAAKC,IAAL,MAAAD,KAAI,YAAQI,EAAMA,MAAMD,KAAI,SAAAE,GAAI,OAAIA,EAAKC,UAArC,QAA6CF,EAAMG,KAAKD,cAChHE,EAAWR,KAAKS,IAAL,MAAAT,KAAI,YAAQN,EAAYQ,MAAMC,KAAI,SAAAC,GAAK,OAAIJ,KAAKS,IAAL,MAAAT,KAAI,YAAQI,EAAMA,MAAMD,KAAI,SAAAE,GAAI,OAAIA,EAAKC,UAArC,QAA6CF,EAAMG,KAAKD,cAGpHV,EAAK,GACLc,EAAS,EACLC,EAAI,EAAGA,EAAEjB,EAAYkB,MAAMF,OAAQC,IACvCD,GAAQhB,EAAYkB,MAAMD,GAE9B,IAAI,IAAIA,EAAI,EAAGA,EAAEjB,EAAYQ,MAAMQ,OAAQC,IAAK,CAG5C,IAFA,IAAMP,EAAQ,sBAAIV,EAAYQ,MAAMS,GAAGP,OAAzB,CAAgCV,EAAYQ,MAAMS,GAAGJ,OAAMJ,KAAI,SAAAE,GAAI,OAAIA,EAAKC,SACtFO,EAAO,GACHC,EAAIN,EAAUM,GAAGf,EAAQe,IAC1BV,EAAMW,SAASD,GACdD,EAAKG,KACL,qBAAqCC,MAAO,CAAClB,QAAS,GAAGA,EAAOS,EAAS,GAAG,KAAKU,WAAW,IAAKC,MAAM,OAAQ,gBAAkB,YAAvHR,EAAEO,WAAWJ,EAAEI,aAGzBL,EAAKG,KACL,qBAAqCC,MAAO,CAAClB,QAAS,GAAGA,EAAOS,EAAS,GAAG,KAAKU,WAAW,IAAKC,MAAM,SAA7FR,EAAEO,WAAWJ,EAAEI,aAGjCtB,EAAKoB,KAAK,qBAAaC,MAAO,CAAClB,OAAQ,OAAQoB,OAAQzB,EAAYkB,MAAMD,GAAGD,EAAO,KAAKQ,WAAW,KAAzF,SAAgGL,EAAKO,WAA3FT,IAExBd,EAAQD,KACP,CAACF,IAEN,cAAC2B,EAAA,EAAD,CAAKC,UAAU,kBAAf,SACE1B,IAKS2B,UAAMC,KAAK/B,GCvCbgC,EAAe,eACfC,EAAqB,qBACrBC,EAAoB,oBCApBC,EAAc,SAACC,GAAD,MAAe,CACtCC,KAAML,EACNM,QAAS,CAAEF,cAGFG,EAAmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,MAAuB,CACnDJ,KAAMJ,EACNK,QAAS,CAAEE,QAAOC,WAGTC,EAAmB,iBAAQ,CACpCL,KAAMH,ICFV,SAASS,EAAT,GAuBE,IAvByC,IAArB1C,EAAoB,EAApBA,YAAauC,EAAO,EAAPA,MAC3BI,EAAWC,cAoBbC,EAAa,GACbC,EAAY9C,EAAYwC,MACpBpB,EAAI,EAAGA,EAAE,GAAIA,IAChB0B,EAAU,GACXD,EAAWvB,KAAK,qBAAKM,UAAU,qCAC/BkB,KAEAD,EAAWvB,KAAK,qBAAKM,UAAU,qBAKnC,OAFAiB,EAAWnB,UAGX,cAACqB,EAAA,EAAD,CAAWnB,UAAU,YAArB,SACI,eAACD,EAAA,EAAD,CAAKC,UAAU,kBAAf,UACI,cAAC,EAAD,CAAcoB,MAAM,UAAUhD,YAAaA,IAC3C,qBAAK4B,UAAU,4BAA4BqB,QAxBtC,WACXjD,EAAYkD,QAuBN,SAA0D,cAAC,IAAD,CAAuB3B,MAAO,CAAE4B,SAAU,IAAMvB,UAAU,mBACpH,qBAAKA,UAAU,+BAA+BqB,QAnCtC,WACXjD,EAAYwC,MAAM,IACnBG,EAASL,EAAiB,CAACC,MAAOA,EAAOC,MAAOxC,EAAYwC,MAAM,MAiC9D,SAAgE,cAAC,IAAD,CAAiBjB,MAAO,CAAE4B,SAAU,IAAMvB,UAAU,mBACpH,qBAAKA,UAAU,iCAAiCqB,QA/BtC,WACbjD,EAAYwC,MAAM,GACnBG,EAASL,EAAiB,CAACC,MAAOA,EAAOC,MAAOxC,EAAYwC,MAAM,MA6B9D,SAAoE,cAAC,IAAD,CAAmBjB,MAAO,CAAE4B,SAAU,IAAMvB,UAAU,mBAC1H,qBAAKA,UAAU,wBAAwBqB,QAvB9B,WACfjD,EAAYoD,YAsBN,SAA0D,cAAC,IAAD,CAAa7B,MAAO,CAAE4B,SAAU,IAAMvB,UAAU,mBAC1G,qBAAKA,UAAU,QAAf,SACGiB,IAEH,qBAAKjB,UAAU,QAAf,SACE,wBAAOA,UAAU,aAAjB,oBAAsC5B,EAAYwC,gBA4B/CX,UAAMC,KAAKY,G,kBC1CXW,MArCf,WACI,IACMC,EAAaC,aAAY,SAAAC,GAC3B,OAAOA,EAAMF,cAHL,EAM0CrD,mBAAS,IANnD,mBAMLwD,EANK,KAMgBC,EANhB,KAcd,OAPEtD,qBAAU,WAGN,IAFA,IAAIuD,EAAG,YAAOL,GACVG,EAAsB,GACpBE,EAAI3C,QAAQyC,EAAoBnC,KAAKqC,EAAIC,OAAO,EATrC,IAUjBF,EAAuBD,KACtB,CAACH,IAGN,cAACO,EAAA,EAAD,UACI,cAACd,EAAA,EAAD,UACKU,EAAoBhD,KAAI,SAACqD,EAAI1C,GAC1B,OACI,cAACO,EAAA,EAAD,UAEQmC,EAAIrD,KAAI,SAACT,EAAYiB,GACjB,OACA,cAAC8C,EAAA,EAAD,CAAKnC,UAAU,0BAAkCL,MAAO,CAAClB,OAAO,SAAhE,SACI,cAAC,EAAD,CAAaL,YAAaA,EAAauC,MAvBlD,EAuByDnB,EAAeH,KADnBA,OAJhDG,W,0ECxBjB4C,EACT,WAAYC,EAAQ/C,EAAOgD,GAAO,oBAC9B,IAAIC,EAAaF,EAAOxD,KAAI,SAAAC,GAAK,OAAIA,EAAMA,SACvCyD,EAAWC,SACXD,EAAaF,EAAOxD,KAAI,SAAAC,GAAK,OAAIA,EAAMG,SAI3C,IAAMG,EAASE,EAAMmD,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAE1CC,KAAKN,MAAOA,EACZM,KAAKxD,OAAQA,EACbwD,KAAKC,SAAUvD,EAAMF,QCZhB0D,EAAS,CAClB,EAAE,EACF,EAAE,EACF,GACA,EAAE,EACF,EACA,EACA,EACA,GAGG,SAASC,EAASC,GAGrB,IAFA,IAAIC,EAAS,GACTC,EAAMF,EACE,IAANE,GACF,IAAI,IAAI1D,EAAI2D,EAAS/D,OAAO,EAAGI,GAAK,EAAGA,IAAI,CACvC,IAAM4D,EAAe,EAAEC,SAASF,EAAS3D,IACzC,GAAG0D,GAAKE,EAAa,CACjBH,EAAOvD,KAAKyD,EAAS3D,IACrB0D,GAAKE,EACL,OAIZ,OAAOH,EAGJ,IAAME,EAAW,CACpB,KACA,KACA,KACA,IACA,IACA,IACA,KAIG,SAASG,EAAelE,EAAQmE,GAOnC,IANA,IAAIC,EAAgB,EAChBC,EAAiB,GACjBC,EAAe,EAEb/E,EAAM4E,EAAO5E,IACbQ,EAAMoE,EAAOpE,IACbqE,EAAcpE,GAAO,CACvB,IAAIuE,EAAO,EACPC,EAAelF,KAAKmF,MAAMnF,KAAKoF,UAAanF,EAAIQ,IAAMA,EAO1D,GANGT,KAAKoF,SAAS,IAAuB,IAAhBJ,EACpBE,EAAeF,EAEfA,EAAgBE,EAGjBJ,EAAcV,EAAOc,GAAcD,EAAKvE,EAIvC,OAHAuE,EAAOvE,EAASoE,EAChBC,EAAe/D,KAAK,CAACJ,MAAOqE,EAAKI,UAAWP,IAC5CA,GAAeG,EACRF,EAGXA,EAAe/D,KAAK,CAACJ,MAAOwD,EAAOc,GAAcD,EAAKI,UAAWP,IACjEA,GAAeV,EAAOc,GAAcD,EAGxC,OAAOF,ECjEX,IAAMO,EAAW,CACb,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,KAGSC,EAAb,WACI,WAAYjF,EAAOkF,EAAOC,GAAW,oBACjCvB,KAAK5D,MAAQA,EACb4D,KAAKsB,MAAQA,EACbtB,KAAKwB,IAAMF,EAAMC,EACjBvB,KAAKuB,SAAWA,EAEhB,IAAME,EAAS3F,KAAKmF,MAAM7E,EAAM,IAC1BD,EAAOiF,EAAShF,EAAM,IAC5B4D,KAAK7D,KAAOA,EAAKsF,EAAOzE,WAThC,2DAYmB2D,GACX,OAAIA,EAAO,GAAGX,KAAKsB,OAASX,EAAO,GAAGX,KAAKwB,KAAOb,EAAO,GAAGX,KAAKsB,OAASX,EAAO,IAAIX,KAAKwB,QAblG,KCfME,EAAM,QACNnF,EAAM,QAGCoF,EAAS,CAClBC,MAAO,CACH5F,MAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IACpB6F,KAAM,CAACH,EAAInF,EAAKA,EAAKmF,EAAKA,EAAKnF,EAAKA,KAI/BkD,EAAS,CAClBmC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAC/BE,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,IAG5B,SAASC,GAAYN,EAAOO,EAAUC,EAAeC,GACxD,IAAMxC,EAAQiC,EAAOK,GACfG,EAAarG,KAAKmF,MAAMnF,KAAKoF,SAAWxB,EAAM1D,MAAMQ,QAEpDqF,EAAOnC,EAAMmC,KAAKM,GACpBC,EAAW1C,EAAM1D,MAAMmG,GAE3B,GAAmB,IAAhBF,EAEC,MAAO,CAAC5F,KADR+F,GAAU,GACclG,MAAO,IAEnC,IAEImG,EAOR,SAAuBhG,EAAKwF,EAAKI,EAAevC,GAG5C,IAHwF,IAArCwC,EAAoC,uDAA1B,EAAGT,EAAuB,uCAAfa,EAAe,uDAAF,EACjFpG,EAAQ,GACRqG,EAAS,EACL3F,EAAI,EAAGA,EAAEqF,EAAerF,IAAI,CAChC,IAAM4F,EAAS1G,KAAKmF,MAAMnF,KAAKoF,SAAWgB,EAAYpG,KAAKmF,MAAMsB,GAAoB,EAAVL,KACvE/F,EAAOsD,EAAOoC,GAAMW,GACxBrG,GAAQE,EACLP,KAAKoF,SAAYsB,GAAQ,EAAEf,GAAS,GAAMa,IACzCnG,GAAM,IAEPL,KAAKoF,SAAY/E,EAAK,GAAG,EAAEsF,GAAS,GAAMa,GAAwB,IAATE,IACxDrG,GAAM,KAGND,EAAMW,SAASV,IAAUuD,EAAM7C,SAASV,EAAK,KAMjDoG,EAAS,EACTrG,EAAMY,KAAKX,KALPoG,IACA3F,KAMR,OAAOV,EAhCKuG,CAAcL,EAASP,EAAMI,EAAcvC,EAAM1D,MAAMkG,EAAUT,GAEtDxF,KAAI,SAAAyG,GAAC,OAAIA,EAAI,IAAI,EAAEjB,MAI1C,OAHG3F,KAAKoF,SAAU,EAAE,EAAGkB,EAAS,KAC5BA,GAAU,IAEP,CAAClG,MAAOmG,EAAYhG,KAAM+F,EAAS,I,aC/BxCO,GAAO,IAAIC,KAAU,IAAKC,gBAC1BC,GAAS,IAAIF,KAAY,CAACG,UAAW,IAAMnF,KAAM,UAAWoF,SAAU,GAAIC,EAAG,IAAIC,QAAQP,IAE3FQ,GAAY,EACZC,GAAQ,IAML,SAASC,GAAWX,GACzBS,GAAUT,EAGL,SAASY,KACd,OAAOF,GAOF,IAAMG,GAAQ,IAAIX,KAAeA,KAAW,CACjDY,WAAa,CACXC,MAAO,EACPC,OAAQ,EACR9F,KAAO,YAQP+F,SAAU,CACVC,OAAQ,KACRC,MAAO,EACPC,QAAS,EACTC,QAAS,MAEVb,QAAQJ,I,wCChCJ,SAASkB,GAAwB9B,EAAWD,GAK/C,IALgG,IAAlCgC,EAAiC,uDAArB,EAAGC,EAAkB,uCAC3FzC,EAAS,EACTzF,EAAQ,GACRmI,EAAUzD,EAAewD,EAAmBD,GAC1CvE,EAAQ5D,KAAKmF,MAAsB,GAAhBnF,KAAKoF,UAJiE,WAKvFtE,GACJ,IAAMV,EAAQ6F,GAAYN,EAAO,QAAQQ,EAAc,EAAEC,GACzDlG,EAAMc,KAAK,CAACZ,MAAOA,EAAMA,MAAMD,KAAI,SAAAyG,GAAC,OAAE,IAAIrB,EAAKqB,EAAEhD,EAAMyE,EAAQvH,GAAGuE,UAAWgD,EAAQvH,GAAGF,UAASL,KAAM,IAAIgF,EAAKnF,EAAMG,KAAKqD,EAAMyE,EAAQvH,GAAGuE,UAAWgD,EAAQvH,GAAGF,UAF9JE,EAAI,EAAGA,EAAEuH,EAAQ3H,OAAQI,IAAK,EAA9BA,GAKR,IAAMwH,EAAS,IAAI5E,EAAOxD,EAAOmI,EAASzE,GAC1C,OAAO,IAAI2E,GAAY,CAACrI,MAAOA,EAAOU,MAAOyH,EAAQlI,KAAI,SAAAyG,GAAC,OAAEA,EAAEhG,SAAQ0H,OAAQA,IAG3E,IAAMC,GAAb,WACI,cAA8C,IAAjC3H,EAAgC,EAAhCA,MAAO0H,EAAyB,EAAzBA,OAAyB,IAAjBpG,aAAiB,MAAV,EAAU,EAAPhC,EAAO,EAAPA,MAAO,oBACzCgE,KAAKhE,MAAQA,EACbgE,KAAKtD,MAAQA,EACbsD,KAAKoE,OAASA,EACdpE,KAAKhC,MAAQA,EALrB,0DASQ,OAAOgC,KAAKhE,MAAMC,KAAI,SAAAC,GAAK,4BAAQA,EAAMA,OAAd,CAAqBA,EAAMG,UAAOuD,SATrE,6BAaQ,ID5BCuD,GC4BgB,CACbE,GAAW,GAIX,IAHA,IAAI7B,EAAM,EACJxF,EAAQgE,KAAKsE,cACbC,EAAM3B,OACJhG,EAAI,EAAGA,EAAEZ,EAAMQ,OAAQI,IAC7B2G,GAAMiB,cAAcxI,EAAMY,GAAGT,KAAMoI,EAAoB,EAAfvI,EAAMY,GAAG0E,MAAQ,IAAIgC,MAC7DC,GAAMkB,eAAe,CAACzI,EAAMY,GAAGT,MAAMoI,EAAkB,EAAbvI,EAAMY,GAAG4E,IAAM,IAAI8B,MAC1DtH,EAAMY,GAAG4E,IAAIA,IACdA,EAAIxF,EAAMY,GAAG4E,KAEjBkD,YAAW,WAAYrB,GAAW,KAAU,EAAJ7B,EAAM,IAAK,IAAI8B,SAxBnE,8BA4BY9H,GAIJ,IAHA,IAAMQ,EAAQR,EAAY8I,cAAcrI,KAAI,SAAAE,GAAI,OAAIwI,KAAKC,UAAUzI,MAC7D0I,EAAY7E,KAAKsE,cAAcrI,KAAI,SAAAE,GAAI,OAAIwI,KAAKC,UAAUzI,MAC5D2I,EAAU,EACNlI,EAAE,EAAGA,EAAEZ,EAAMQ,OAAQI,IACtBiI,EAAUhI,SAASb,EAAMY,KACxBkI,IAER,OAAGA,IAAU9I,EAAMQ,SApC3B,iCA4CQ,IAFA,IAAIuI,EAAQ,IAAIC,KAAWC,MAEnBrI,EAAI,EAAGA,EAAEoD,KAAKhE,MAAMQ,OAAOI,IAC/BmI,EAAMG,SAAS,CACX,IAAIF,KAAWG,UAAU,CAACC,MAAM,GAAD,mBAAMpF,KAAKhE,MAAMY,GAAGV,MAAMD,KAAI,SAAAyG,GAAC,OAAIA,EAAEvG,SAArC,CAA4C6D,KAAKhE,MAAMY,GAAGP,KAAKF,OAAOoF,SAAUpB,EAASH,KAAKtD,MAAME,QACpI,SAASyI,EAAOtH,GACnB,MAAO,CAACuH,YAAY,MAIxB,IACIC,EADAC,EAAQ,IAAIR,KAAWS,OAAOV,GAElCQ,EAAO,IAAIG,KAAK,CAAEF,EAAMG,aAAe,CACnC/H,KAAM,eAEVgI,KAAUC,OAAON,EAAM,UAzD/B,gCA4Dc7F,GACN,IAAMqB,EAAOrB,EAAQM,KAAKoE,OAAO1E,MAC3B1D,EAAQgE,KAAKhE,MAAMC,KAAI,SAAAC,GAAW,MAAO,CAACA,MAAOA,EAAMA,MAAMD,KAAI,SAAAyG,GAAC,OAAE,IAAIrB,EAAKqB,EAAEtG,MAAM2E,EAAM2B,EAAEpB,MAAOoB,EAAEnB,aAAYlF,KAAM,IAAIgF,EAAKnF,EAAMG,KAAKD,MAAM2E,EAAM7E,EAAMG,KAAKiF,MAAOpF,EAAMG,KAAKkF,cACrL6C,EAAS,IAAI5E,EAAOxD,EAAOgE,KAAKtD,MAAOsD,KAAKoE,OAAO1E,MAAQqB,GACjE,OAAO,IAAIsD,EAAJ,2BAAoBrE,MAApB,IAAyBoE,SAAQpI,aAhEhD,6BAmEWkG,EAAW+B,EAAa6B,GACN9F,KAAK+F,cAG1B,OAFiB/F,KAAKgG,YAAYF,EAAe5D,EAAW+B,GAC3CjE,KAAKiG,aAAaH,EAAe5D,KAtE1D,mCA0EiBgE,EAAEhE,GAIX,IAJsB,IAAD,OACjBiE,EAAW,GACXnK,EAAQ,GACRmF,EAAY,EAHK,WAIbvE,GACJ,GAAGd,KAAKoF,SAASgF,GAAKtJ,EAAE,EAAKF,MAAMF,OAAO,EAAE,CACxC,IAAM4J,EAAMrE,GAAY,EAAE,QAAQ,EAAK/F,MAAM,GAAGE,MAAMM,OAAO0F,GACvD7F,EAAO,IAAIgF,EAAK+E,EAAI/J,KAAK,EAAK+H,OAAO1E,MAAOyB,EAAW,EAAKzE,MAAME,IAClEV,EAAQkK,EAAIlK,MAAMD,KAAI,SAAAyG,GAAC,OAAEA,EAAE,EAAK0B,OAAO1E,SAK7C,OAHA1D,EAAMc,KAAK,CAACZ,MAAOA,EAAMD,KAAI,SAAAE,GAAI,OAAI,IAAIkF,EAAKlF,EAAKgF,EAAU,EAAKzE,MAAME,OAAMP,KAAM,IAAIgF,EAAKhF,EAAKD,MAAO+E,EAAW,EAAKzE,MAAME,MAC/HuJ,EAASrJ,KAAK,EAAKJ,MAAME,IACzBuE,GAAW,EAAKzE,MAAME,GACtB,WAEJuJ,EAASrJ,KAAK,EAAKJ,MAAME,IACzBuE,GAAW,EAAKzE,MAAME,GACtBZ,EAAMc,KAAK,EAAKd,MAAMY,KAblBA,EAAI,EAAGA,EAAEoD,KAAKtD,MAAMF,OAAQI,IAAI,EAAhCA,GAeR,IAAMwH,EAAS,IAAI5E,EAAOxD,EAAOmK,EAAUnG,KAAKoE,OAAO1E,OACvD,OAAO,IAAI2E,EAAJ,2BAAoBrE,MAApB,IAAyBoE,SAAQpI,QAAOU,MAAOyJ,OA9F9D,oCAkGQ,IAAME,EAAWvK,KAAKmF,MAAoB,EAAdnF,KAAKoF,UAAY,EAAElB,KAAKoE,OAAO1E,MAC3D,OAAOM,KAAKsG,UAAUD,KAnG9B,kCAsGgBH,EAAEhE,EAAWvB,GACrB,IAD4B,EAEMX,KAAKuG,UAAUL,EAAEhE,GAFvB,mBAErBsE,EAFqB,KAEPC,EAFO,OAGrB,IAAIpC,EAAJ,2BAAoBrE,MAApB,IAA0BhE,MAAOyK,EAAW/J,MAAO8J,KAC3BE,WAAWR,EAAEhE,EAAWvB,GAJ3B,mBAIrBwF,EAJqB,KAIXnK,EAJW,KAKtBoI,EAAS,IAAI5E,EAAOxD,EAAOmK,EAAUnG,KAAKoE,OAAO1E,OACvD,OAAO,IAAI2E,EAAJ,2BAAoBrE,MAApB,IAAyBoE,SAAQpI,QAAOU,MAAOyJ,OA5G9D,iCA+GeD,EAAEhE,EAAWvB,GAMpB,IAN4B,IAAD,OACvBwF,EAAW,GACXnK,EAAQ,GACRmF,EAAY,EACVpF,EAAM4E,EAAO5E,IACbQ,EAAMoE,EAAOpE,IALQ,WAMnBK,GACJ,IAAI+J,EAAgB,GAKpB,GAJAzG,EAAO0G,SAAQ,SAAClE,EAAE3E,GACX2E,EAAE,EAAKhG,MAAME,IAAImB,EAAMhC,GAAKgC,GAAOxB,GAClCoK,EAAc7J,KAAK4F,MAExB5G,KAAKoF,SAASgF,GAAKS,EAAcnK,OAAO,EAAE,CACzC,IAAMgG,EAASmE,EAAc7K,KAAKmF,MAAMnF,KAAKoF,SAASyF,EAAcnK,SAE9D4J,EAAMrE,GAAY,EAAE,QAAQ,EAAK/F,MAAM,GAAGE,MAAMM,OAAO0F,GACvD7F,EAAO,IAAIgF,EAAK+E,EAAI/J,KAAK,EAAK+H,OAAO1E,MAAOyB,EAAW,EAAKzE,MAAME,IAClEV,EAAQkK,EAAIlK,MAAMD,KAAI,SAAAyG,GAAC,OAAEA,EAAE,EAAK0B,OAAO1E,SAuB7C,OArBG5D,KAAK+K,MAAM/K,KAAKoF,WAAW,GAC1BlF,EAAMc,KAAK,CAEPZ,MAAO,EAAKF,MAAMY,GAAGV,MAAMD,KAAI,SAAAE,GAAI,OAAI,IAAIkF,EAAKlF,EAAKC,MAAM+E,EAAUqB,MACrEnG,KAAM,IAAIgF,EAAK,EAAKrF,MAAMY,GAAGP,KAAKD,MAAO+E,EAAWqB,KACxDxG,EAAMc,KAAK,CAEPZ,MAAOA,EAAMD,KAAI,SAAAE,GAAI,OAAI,IAAIkF,EAAKlF,EAAKgF,EAAUqB,EAAO,EAAK9F,MAAME,GAAG4F,MACtEnG,KAAM,IAAIgF,EAAKhF,EAAKD,MAAO+E,EAAUqB,EAAQ,EAAK9F,MAAME,GAAG4F,KAC/D2D,EAASrJ,KAAK,EAAKJ,MAAME,GAAG4F,GAC5B2D,EAASrJ,KAAK0F,KAGdxG,EAAMc,KAAK,CAACZ,MAAOA,EAAMD,KAAI,SAAAE,GAAI,OAAI,IAAIkF,EAAKlF,EAAKgF,EAAUqB,MAAUnG,KAAM,IAAIgF,EAAKhF,EAAKD,MAAO+E,EAAWqB,KAE7GxG,EAAMc,KAAK,CAACZ,MAAO,EAAKF,MAAMY,GAAGV,MAAMD,KAAI,SAAAE,GAAI,OAAI,IAAIkF,EAAKlF,EAAKC,MAAM+E,EAAUqB,EAAO,EAAK9F,MAAME,GAAG4F,MAAUnG,KAAM,IAAIgF,EAAK,EAAKrF,MAAMY,GAAGP,KAAKD,MAAO+E,EAAUqB,EAAQ,EAAK9F,MAAME,GAAG4F,KACzL2D,EAASrJ,KAAK0F,GACd2D,EAASrJ,KAAK,EAAKJ,MAAME,GAAG4F,IAGhCrB,GAAW,EAAKzE,MAAME,GACtB,WAEJuJ,EAASrJ,KAAK,EAAKJ,MAAME,IACzBuE,GAAW,EAAKzE,MAAME,GACtBZ,EAAMc,KAAK,EAAKd,MAAMY,KAtClBA,EAAI,EAAGA,EAAEoD,KAAKtD,MAAMF,OAAQI,IAAI,EAAhCA,GAwCR,MAAO,CAACuJ,EAAUnK,KA7J1B,gCAgKckK,EAAEhE,GAIR,IAJoB,IAAD,OACfiE,EAAW,GACXnK,EAAQ,GACRmF,EAAY,EAHG,cAKf,GAAGrF,KAAKoF,SAASgF,GAAKtJ,EAAE,EAAKF,MAAMF,OAAO,EAAE,CACxC,IAAMsK,EAAY,sBAAO,EAAK9K,MAAMY,GAAGV,OAArB,YAA+B,EAAKF,MAAMY,EAAE,GAAGV,QAC3DG,EAAO,EAAKL,MAAMY,EAAEd,KAAK+K,MAAM/K,KAAKoF,WAAW7E,KAC/CH,EAAQ6K,GAAiBD,EAAczK,EAAM,EAAK+H,OAAO1E,MAAMwC,EAAU,EAAKlG,MAAMY,GAAGV,MAAMM,QAMnG,OAJAR,EAAMc,KAAK,CAACZ,MAAOA,EAAMD,KAAI,SAAAE,GAAI,OAAI,IAAIkF,EAAKlF,EAAKgF,EAAU,EAAKzE,MAAME,GAAG,EAAKF,MAAME,EAAE,OAAMP,KAAM,IAAIgF,EAAKhF,EAAKD,MAAO+E,EAAW,EAAKzE,MAAME,GAAG,EAAKF,MAAME,EAAE,MAC/JuJ,EAASrJ,KAAK,EAAKJ,MAAME,GAAG,EAAKF,MAAME,EAAE,IACzCuE,GAAW,EAAKzE,MAAME,GAAG,EAAKF,MAAME,EAAE,GACtCA,IARwC,IASxC,WAEJuJ,EAASrJ,KAAK,EAAKJ,MAAME,IACzBuE,GAAW,EAAKzE,MAAME,GACtBZ,EAAMc,KAAK,EAAKd,MAAMY,IAlBP,KAIXA,EAAI,EAAGA,EAAEoD,KAAKtD,MAAMF,OAAQI,IAAI,EAAhCA,GAgBR,MAAO,CAACuJ,EAAUnK,OApL1B,KCkBA,SAASgL,GAAeC,GACpB,IAAMlL,EAAMkL,EAAOpH,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAExC,OADsBkH,EAAOhL,KAAI,SAAA+B,GAAK,OAAIA,EAAMjC,KAIpD,SAASmL,GAAaC,GAIlB,IAHA,IAAMC,EAAOtL,KAAKoF,SACdmG,EAAM,EACNzK,EAAI,EACFyK,EAAID,GACNC,GAAOF,EAASvK,GAChBA,IAEJ,OAAOA,EAAE,EAGN,SAAS0K,GAAMC,EAAOC,EAAOtF,EAAW1F,GAC3C,IAAMT,EAAMD,KAAKC,IAAIwL,EAAMnD,OAAO1E,MAAO8H,EAAMpD,OAAO1E,OAChDnD,EAAMT,KAAKS,IAAIgL,EAAMnD,OAAO1E,MAAO8H,EAAMpD,OAAO1E,OAEhD2G,EAAWvK,KAAKmF,MAAMnF,KAAKoF,UAAYnF,EAAMQ,IAAQA,EAErDkL,EAAkBF,EAAMjB,UAAUD,GAClCqB,EAAkBF,EAAMlB,UAAUD,GAElCF,EA2FV,SAAqBwB,EAAQC,EAAQpL,GACjC,IAAI2J,EAAW,GACX0B,EAAW,EACXC,EAAO,CAACH,EAAO1L,KAAI,SAAAE,GAAI,OAAIA,EAAKqF,OAAKuG,OAAOH,EAAO3L,KAAI,SAAAE,GAAI,OAAIA,EAAKqF,OAAKuG,QAE7E,KAAMF,EAASrL,GAEX,IADA,IAAIgG,EAAS1G,KAAK+K,MAAM/K,KAAKoF,UACrBtE,EAAI,EAAGA,EAAGkL,EAAKtF,GAAQhG,OAAQI,IAAI,CACvC,GAAGkL,EAAKtF,GAAQ5F,GAAGiL,EAAS,CACxB1B,EAASrJ,KAAKgL,EAAKtF,GAAQ5F,GAAGiL,GAC9BA,EAAWC,EAAKtF,GAAQ5F,GACxB,MAEDA,IAAIkL,EAAKtF,GAAQhG,OAAO,IACvB2J,EAASrJ,KAAKgL,EAAKtF,GAAQ5F,GAAGiL,GAC9BA,EAAWC,EAAKtF,GAAQ5F,IAIpC,OAAOuJ,EA9GU6B,CAAYP,EAAgBnD,cAAeoD,EAAgBpD,cAAe9H,GAIrFR,EAwDH,SAAoBU,EAAOV,GAG9B,IAFA,IAAIiM,EAAW,GACX9G,EAAY,EAFoB,WAG5BvE,GACJ,IAAMV,EAAQF,EAAMY,GACpBqL,EAASnL,KAAK,CAACZ,MAAOA,EAAMA,MAAMD,KAAI,SAAAyG,GAAC,OAAE,IAAIrB,EAAKqB,EAAEvB,EAAWzE,EAAME,OAAMP,KAAM,IAAIgF,EAAKnF,EAAMG,KAAK8E,EAAWzE,EAAME,MACtHuE,GAAWzE,EAAME,IAHbA,EAAI,EAAGA,EAAEF,EAAMF,OAAQI,IAAK,EAA5BA,GAKR,OAAOqL,EAhEOC,CAAW/B,EAM7B,SAAuBwB,EAAQC,EAAQzB,EAAUgC,EAAelG,EAAeC,GAG3E,IAFA,IAAIkG,EAAc,EACdC,EAAY,GAFqE,WAG7EzL,GACJ,IAAM+D,EAAO,CAACyH,EAAaA,EAAYjC,EAASvJ,IAE5C0L,EAAa,GACjBX,EAAO3L,MAAM4K,SAAQ,SAAA1K,GACjB,OAAGA,EAAMG,KAAKkM,eAAe5H,GAClB2H,EAAWxL,KAAKZ,EAAMG,MAC1B,QAGXuL,EAAO5L,MAAM4K,SAAQ,SAAA1K,GACjB,OAAGA,EAAMG,KAAKkM,eAAe5H,GAClB2H,EAAWxL,KAAKZ,EAAMG,MAC1B,QAGXiM,EAAU,YAAQ,IAAIE,IAAIF,IAE1B,IAAM9F,EAAS1G,KAAKmF,MAAMnF,KAAKoF,SAASoH,EAAW9L,QAC7CH,EAAOiM,EAAW9F,GAExB8F,EAAa,GACbV,EAAO5L,MAAM4K,SAAQ,SAAA1K,GACjBA,EAAMA,MAAM0K,SAAQ,SAAAzK,GACpB,OAAGA,EAAKoM,eAAe5H,GACZ2H,EAAWxL,KAAKX,GACpB,WAIXwL,EAAO3L,MAAM4K,SAAQ,SAAA1K,GACjBA,EAAMA,MAAM0K,SAAQ,SAAAzK,GACpB,OAAGA,EAAKoM,eAAe5H,GACZ2H,EAAWxL,KAAKX,GACpB,WAKX,IAAMD,EAAQ6K,GADduB,EAAU,YAAQ,IAAIE,IAAIF,IACiBjM,EAAM8L,EAAejG,EAAWD,GAE3EoG,EAAUvL,KAAK,CAACZ,QAAMG,KAAKA,EAAKD,QAChCgM,GAAejC,EAASvJ,IA1CpBA,EAAE,EAAGA,EAAEuJ,EAAS3J,OAAQI,IAAK,EAA7BA,GA4CR,OAAOyL,EAvDWI,CAAchB,EAAiBC,EAAiBvB,EAAUE,EAAUkB,EAAMvL,MAAM,GAAGE,MAAMM,OAAO0F,IAI5GkC,EAAS,IAAI5E,EAAOxD,EAAOmK,EAAUE,GAC3C,OAAO,IAAIhC,GAAY,CAACrI,MAAOA,EAAOU,MAAOyJ,EAAU/B,OAAQA,IAgE5D,SAAS2C,GAAiBuB,EAAYjM,EAAM8L,EAAejG,EAAWD,GAMzE,IALA,IAAMvC,EAAQiC,EAAM,MACd+G,GAAkBrM,EAAKD,MAAM+L,GAAe,GAC5CtG,EAAOnC,EAAMmC,KAAKnC,EAAM1D,MAAM2M,QAAQD,IACxCxM,EAAQ,GACRqG,EAAS,EACL9F,EAAI,EAAIA,EAAEwF,EAAexF,IAAK,CAClC,IAAM+F,EAAS8F,EAAWxM,KAAKmF,MAAMnF,KAAKoF,SAASoH,EAAW9L,SAASJ,OACnEF,EAAMW,SAAS2F,IAAY/C,EAAOoC,GAAM+G,MAAM,EAAE1G,EAAYpG,KAAKmF,MAAMsB,GAAoB,EAAVL,KAAerF,UAAW2F,EAAOnG,EAAKD,OAAO,KAMlImG,EAAS,EACTrG,EAAMY,KAAK0F,KALPD,IACA9F,KAMR,OAAOP,EChII2M,OApBf,YAAmD,IAA3BC,EAA0B,EAA1BA,iBAAkBC,EAAQ,EAARA,OAClC5K,EAAWC,cAETU,EAAaC,aAAY,SAAAC,GAC3B,OAAOA,EAAMF,cASnB,OACE,cAACkK,EAAA,EAAD,CAAQC,QAAQ,YAAYzK,MAAM,UAAUC,QAP5B,WACZN,EAASF,KDFV,SAAuBa,EAAYoD,EAAW+B,EAAazH,EAAQsJ,GAEtE,IADA,IAAIoD,EAAgB,GACZtM,EAAI,EAAGA,EAAEkC,EAAWtC,OAAQI,IAAI,CAapC,IAZA,IAAMuK,EAAWH,GAAelI,EAAW7C,KAAI,SAAAyG,GAAC,OAAIA,EAAE1E,UAEhDmL,EAAQjC,GAAaC,GACrBiC,EAAQlC,GAAaC,GAMrBkC,EADU/B,GAHFxI,EAAWqK,GACXrK,EAAWsK,GAEUlH,EAAW1F,GACtB8M,OAAOpH,EAAW+B,EAAa6B,GAEnDyD,EAAW,EACP9M,EAAI,EAAGA,EAAEyM,EAAc1M,OAAQC,IACnC,GAAGyM,EAAczM,GAAG+M,QAAQH,GAAS,CACjCzM,IACA2M,EAAW,EACX,MAGM,IAAXA,GACCL,EAAcpM,KAAKuM,GAE3B,OAAOH,ECtBHO,CAAc3K,EAAYiK,EAAO7G,UAAW,CAAC3F,IAAIwM,EAAOW,UAAU3N,IAAIgN,EAAOY,WAAWZ,EAAO7E,kBAAmB6E,EAAOjD,gBAAgB7J,KAAI,SAAAyG,GAAC,OAAIvE,EAAST,EAAYgF,OACvKoG,KAIJ,qBCgHWc,OA3Hf,WAAyB,IAAD,EACgBnO,mBAAS,GADzB,mBACboO,EADa,KACDC,EADC,OAGMrO,mBAAS,CAC/BsO,eAAgB,EAChBjE,eAAgB,GAChB5D,UAAW,EACXD,cAAe,EACfiC,kBAAmB,EACnBwF,UAAUxJ,EAAO,GACjByJ,UAAUzJ,EAAO,KAVD,mBAGblB,EAHa,KAGNgL,EAHM,OAaMvO,mBAAS,KAbf,mBAab2H,EAba,KAaN6G,EAbM,KAed9L,EAAWC,cAEb8L,EAAW,EACZL,EAAW,IACVK,EAAW,GAEf,IAAMC,EAAe,SAACC,GAElB,IACIC,EAAQC,WAAWF,EAAEG,OAAOF,OAE7BA,EAAM,IACc,UAAhBD,EAAEG,OAAOC,MACRP,EAASI,GJlBvBjH,GImBuBiH,GAILL,EAAS,2BACFhL,GADC,kBAEHoL,EAAEG,OAAOC,KAAOH,OAS/BI,EAAU,WACZX,EAAc,GACd3L,EAASF,KFpDV,SAA0ByM,EAAKxI,EAAWD,EAAegC,EAAaC,GAGzE,IAFA,IAAMpF,EAAa,GAEXlC,EAAG,EAAGA,EAAE8N,EAAM9N,IAClBkC,EAAWhC,KAAKkH,GAAwB9B,EAAWD,EAAegC,EAAaC,IAEnF,OAAOpF,EE+CH6L,CAAiB3L,EAAM+K,eAAgB/K,EAAMkD,UAAWlD,EAAMiD,cAAe,CAAC1F,IAAI2D,EAAOyI,QAAQ3J,EAAM0K,WAAW3N,IAAImE,EAAOyI,QAAQ3J,EAAM2K,YAAa3K,EAAMkF,mBAAmBjI,KAAI,SAAAyG,GAAC,OAAIvE,EAAST,EAAYgF,QASrN,OANE9G,qBAAU,WACN6O,MAEC,CAACzL,IAIN,cAACK,EAAA,EAAD,UACI,eAACd,EAAA,EAAD,WACI,cAACpB,EAAA,EAAD,UACI,8CAAiB0M,OAErB,eAAC1M,EAAA,EAAD,CAAKC,UAAU,MAAf,UACI,cAACmC,EAAA,EAAD,UAAK,cAACqL,EAAA,EAAD,CAAWC,WAAY,CAAEC,WAAY,CAAEvO,IAAK,IAAOiO,KAAK,QAAQO,MAAM,QAAQnN,KAAK,SAASoN,SAAUb,EAAcE,MAAOjH,MAChI,cAAC7D,EAAA,EAAD,UAAK,cAACqL,EAAA,EAAD,CAAWC,WAAY,CAAEC,WAAY,CAAEvO,IAAK,IAAO2N,SAAUA,EAAUM,KAAK,oBAAoBO,MAAM,qBAAqBnN,KAAK,SAASoN,SAAUb,EAAcE,MAAOrL,EAAMkF,sBACnL,cAAC3E,EAAA,EAAD,UAAK,cAACqL,EAAA,EAAD,CAAWC,WAAY,CAAEC,WAAY,CAAEvO,IAAK,IAAO2N,SAAUA,EAAUM,KAAK,iBAAiBO,MAAM,kBAAkBnN,KAAK,SAASoN,SAAUb,EAAcE,MAAOrL,EAAM+K,mBAC7K,cAACxK,EAAA,EAAD,UAAK,cAACqL,EAAA,EAAD,CAAWC,WAAY,CAAEC,WAAY,CAAE/O,IAAK,IAAOmO,SAAUA,EAAUM,KAAK,iBAAiBO,MAAM,kBAAkBnN,KAAK,SAASoN,SAAUb,EAAcE,MAAOrL,EAAM8G,sBAEjL,eAAC3I,EAAA,EAAD,CAAKC,UAAU,MAAf,UACY,eAACmC,EAAA,EAAD,WACI,cAAC0L,EAAA,EAAD,CAAYC,QAAM,EAAlB,6BAGA,cAACC,EAAA,EAAD,CACAX,KAAK,YACLN,SAAUA,EACVG,MAAOrL,EAAM0K,UACbsB,SAAUb,EAJV,SAMCjK,EAAOjE,KAAI,SAACS,EAAOqB,GAChB,OAAGrB,EAAMsC,EAAM2K,UACR,cAACyB,EAAA,EAAD,CAAsBf,MAAO3N,EAA7B,SAAqCA,GAAtBqB,GAEf,aAIf,eAACwB,EAAA,EAAD,WACA,cAAC0L,EAAA,EAAD,CAAYC,QAAM,EAAlB,6BAGI,cAACC,EAAA,EAAD,CACAX,KAAK,YACLN,SAAUA,EACVG,MAAOrL,EAAM2K,UACbqB,SAAUb,EAJV,SAMCjK,EAAOjE,KAAI,SAACS,EAAOqB,GAChB,OAAGrB,EAAMsC,EAAM0K,UACR,cAAC0B,EAAA,EAAD,CAAsBf,MAAO3N,EAA7B,SAAqCA,GAAtBqB,GAEf,aAIf,cAACwB,EAAA,EAAD,UACA,cAACqL,EAAA,EAAD,CAAWC,WAAY,CAAEC,WAAY,CAAEvO,IAAKyC,EAAMiD,cAAelG,IAAI,KAAQmO,SAAUA,EAAUM,KAAK,YAAYO,MAAM,YAAYnN,KAAK,SAASoN,SAAUb,EAAcE,MAAOrL,EAAMkD,cAEvL,cAAC3C,EAAA,EAAD,UACA,cAACqL,EAAA,EAAD,CAAWC,WAAY,CAAEC,WAAY,CAAEvO,IAAK,EAAGR,IAAI,KAAOmO,SAAUA,EAAUM,KAAK,gBAAgBO,MAAM,kBAAkBnN,KAAK,SAASoN,SAAUb,EAAcE,MAAOrL,EAAMiD,qBAG1L,eAAC9E,EAAA,EAAD,WACI,cAAC6L,EAAA,EAAD,CAAQC,QAAQ,YAAYzK,MAAM,UAAUC,QAASgM,EAArD,qBAGA,cAAC,GAAD,CAAe3B,iBA5EF,WACrBgB,EAAcD,EAAW,IA2EkCd,OAAM,2BAAM/J,GAAN,IAAa0K,UAAWxJ,EAAOyI,QAAQ3J,EAAM0K,WAAYC,UAAUzJ,EAAOyI,QAAQ3J,EAAM2K,wBCnElJ0B,OArDf,WAAiB,IAAD,EAEc5P,mBAAS,MAFvB,mBAEL6P,EAFK,KAEEC,EAFF,KAGNzM,EAAaC,aAAY,SAAAC,GAC3B,OAAOA,EAAMF,cAWrB,OARIlD,qBAAU,WACHkD,EAAWtC,OAAO,GACjB+O,EAASjE,GAAMxI,EAAW,GAAIA,EAAW,OAE5C,CAACA,IAILwM,EAID,cAACjM,EAAA,EAAD,UACI,eAACd,EAAA,EAAD,WACI,cAACpB,EAAA,EAAD,CAAKC,UAAU,MAAf,SACI,cAACmC,EAAA,EAAD,UAAK,2CAET,cAACpC,EAAA,EAAD,CAAKC,UAAU,MAAf,SACI,6CAEJ,cAACD,EAAA,EAAD,UACI,cAACoC,EAAA,EAAD,CAAKxC,MAAO,CAAClB,OAAO,SAApB,SACI,cAAC,EAAD,CAAaL,YAAasD,EAAW,GAAIf,MAAO,QAGxD,cAACZ,EAAA,EAAD,CAAKC,UAAU,MAAf,SACI,6CAEJ,cAACD,EAAA,EAAD,UACI,cAACoC,EAAA,EAAD,CAAKxC,MAAO,CAAClB,OAAO,SAApB,SACI,cAAC,EAAD,CAAaL,YAAasD,EAAW,GAAIf,MAAO,QAGxD,cAACZ,EAAA,EAAD,CAAKC,UAAU,MAAf,SACI,0CAEJ,cAACD,EAAA,EAAD,UACI,cAACoC,EAAA,EAAD,CAAKxC,MAAO,CAAClB,OAAO,SAApB,SACI,cAAC,EAAD,CAAaL,YAAa8P,aA7BnC,M,8CCVLE,GAAQC,aAAe,CAC3BC,QAAS,CACP9N,KAAM,OACN+N,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,cAMZ,SAASE,KACP,OACE,eAACC,GAAA,EAAD,CAAeP,MAAOA,GAAtB,UACE,cAAC,GAAD,IACA,cAAC,KAAD,UACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAOQ,KAAK,QAAZ,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,cAQZF,GAAIG,iBAAkB,EAEPH,UClCAI,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,yBCJRQ,GAAe,GAiCNC,GA/BW,WAAmC,IAAlC5N,EAAiC,uDAAzB2N,GAAcE,EAAW,uCAC1D,OAAQA,EAAOjP,MACb,KAAKL,EACD,MAAM,GAAN,mBACKyB,GADL,CAEE6N,EAAOhP,QAAQF,WAInB,KAAKF,EACH,MAAO,GAGT,KAAKD,EACH,OAAOwB,EAAM/C,KAAI,SAAC6Q,EAAM/O,GACtB,OAAIA,IAAU8O,EAAOhP,QAAQE,MACpB+O,EAEF,IAAIzI,GAAJ,2BACFyI,GADE,IAEL9O,MAAO6O,EAAOhP,QAAQG,YAK9B,QACE,OAAOgB,IC5BE+N,gBAAgB,CAAEjO,WAAY8N,KCA9BI,gBAAYC,ICO3BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAM1BrB,O","file":"static/js/main.a10fcd9c.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {Row} from 'reactstrap'\r\n\r\nexport function DisplayNotes({progression}){\r\n    const [cols, setCols] = useState([])\r\n    useEffect(() => {\r\n        const height = Math.max(...progression.notes.map(chord => Math.max(...chord.chord.map(note => note.hight), chord.root.hight)))\r\n        const baseLine = Math.min(...progression.notes.map(chord => Math.min(...chord.chord.map(note => note.hight), chord.root.hight)))\r\n        // const height = 60\r\n        // const baseLine = 24\r\n        let cols=[]\r\n        let length = 0\r\n        for(let j = 0; j<progression.rythm.length; j++ ){\r\n            length+=progression.rythm[j]\r\n        }\r\n        for(let j = 0; j<progression.notes.length; j++ ){\r\n            const chord = [...progression.notes[j].chord, progression.notes[j].root].map(note => note.hight)\r\n            let rows = []\r\n            for(let i = baseLine; i<=height; i++ ){\r\n                if(chord.includes(i))\r\n                    rows.push(\r\n                    <div key={j.toString()+i.toString()} style={{height: (1/(height-baseLine+1)*100).toString()+'%', width:'100%', \"backgroundColor\":'#c62828'}}>\r\n                    </div>)\r\n                else\r\n                    rows.push(\r\n                    <div key={j.toString()+i.toString()} style={{height: (1/(height-baseLine+1)*100).toString()+'%', width:'100%'}}>\r\n                    </div>)\r\n            }\r\n            cols.push(<div key={j} style={{height: '100%', width: (progression.rythm[j]/length*100).toString()+'%'}}>{rows.reverse()}</div>)\r\n        }\r\n        setCols(cols)\r\n      }, [progression]);\r\n  return (\r\n    <Row className='w-100 m-0 h-100'>\r\n     {cols}\r\n      </Row>\r\n      );\r\n}\r\n\r\nexport default React.memo(DisplayNotes);","export const ADD_SPECIMAN = \"ADD_SPECIMAN\";\r\nexport const SET_SPECIMAN_SCORE = \"SET_SPECIMAN_SCORE\";\r\nexport const DELETE_POPULATION = \"DELETE_POPULATION\";","import { ADD_SPECIMAN, SET_SPECIMAN_SCORE, DELETE_POPULATION } from \"./actionTypes.js\";\r\n\r\nexport const addSpeciman = (speciman) => ({ \r\n    type: ADD_SPECIMAN, \r\n    payload: { speciman } \r\n});\r\n\r\nexport const setSpecimanScore = ( {index, score} ) => ({ \r\n    type: SET_SPECIMAN_SCORE, \r\n    payload: { index, score } \r\n});\r\n\r\nexport const deletePopulation = ( ) => ({ \r\n    type: DELETE_POPULATION\r\n});","import React from 'react';\r\nimport {Container, Row} from 'reactstrap'\r\nimport { useDispatch } from 'react-redux'\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\nimport DisplayNotes from './DisplayNotes'\r\nimport { setSpecimanScore} from '../actions/populationActions'\r\n\r\nfunction MidiDisplay({progression, index}){\r\n  const dispatch = useDispatch()\r\n\r\n  const scoreUp = () => {\r\n    if(progression.score<10)\r\n      dispatch(setSpecimanScore({index: index ,score: progression.score+1}))\r\n  }\r\n\r\n  const scoreDown = () => {\r\n    if(progression.score>0)\r\n      dispatch(setSpecimanScore({index: index ,score: progression.score-1}))\r\n  }\r\n\r\n  const play = () => {\r\n    progression.play()\r\n  }\r\n\r\n  const download = () => {\r\n    progression.download()\r\n  }\r\n\r\n  let scoreMeter = []\r\n  let tempScore = progression.score\r\n  for(let i = 0; i<10; i++){\r\n    if(tempScore>0){\r\n      scoreMeter.push(<div className='w-100 score-bar score-bar-color'></div>)\r\n      tempScore--\r\n    } else {\r\n      scoreMeter.push(<div className='w-100 score-bar'></div>)\r\n    }\r\n  }\r\n  scoreMeter.reverse()\r\n\r\n  return (\r\n  <Container className='p-0 h-100'>\r\n      <Row className='w-100 m-0 h-100'>\r\n          <DisplayNotes color='#c62828' progression={progression} />\r\n          <div className='overlay play border-color' onClick={play}><PlayCircleOutlineIcon style={{ fontSize: 80 }} className='overlay-text'/></div>\r\n          <div className='overlay up-vote border-color' onClick={scoreUp}><ArrowUpwardIcon style={{ fontSize: 60 }} className='overlay-text'/></div>\r\n          <div className='overlay down-vote border-color' onClick={scoreDown}><ArrowDownwardIcon style={{ fontSize: 60 }} className='overlay-text'/></div>\r\n          <div className='download border-color' onClick={download}><SaveAltIcon style={{ fontSize: 20 }} className='overlay-text'/></div>\r\n          <div className='score'>\r\n            {scoreMeter}\r\n          </div>\r\n          <div className='score'>\r\n            <small className='score-text'>score: {progression.score}</small>\r\n          </div>\r\n      </Row>\r\n      {/* <Row>\r\n        <Col sm={3}>\r\n          <small>\r\n            Score\r\n          </small>\r\n        </Col>\r\n        <Col sm={1} className='pl-2'>\r\n          <small>\r\n            {progression.score}\r\n          </small>\r\n        </Col>\r\n        <Col className='pl-2'>\r\n        <Slider\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          min={0}\r\n          max={100}\r\n          onChange={setScore}\r\n          value={progression.score}\r\n        />\r\n        </Col>\r\n      </Row> */}\r\n  </Container>)\r\n}\r\n\r\nexport default React.memo(MidiDisplay);\r\n","import React, {useState, useEffect} from 'react';\r\nimport MidiDisplay from './MidiDisplay';\r\nimport {Jumbotron, Container, Row, Col} from 'reactstrap'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction Grid() {\r\n    const numberPerRow = 4;\r\n    const population = useSelector(state => {\r\n        return state.population\r\n    })\r\n\r\n    const [populationFormatted, setPopulationFormatted] = useState([])\r\n    useEffect(() => {\r\n        let arr = [...population];\r\n        let populationFormatted = []\r\n        while(arr.length) populationFormatted.push(arr.splice(0,numberPerRow));\r\n        setPopulationFormatted(populationFormatted)\r\n      }, [population]);\r\n\r\n  return (\r\n    <Jumbotron>\r\n        <Container>\r\n            {populationFormatted.map((row,i) => {\r\n                return (\r\n                    <Row key={i}>\r\n                        {\r\n                            row.map((progression,j) => {\r\n                                return (\r\n                                <Col className=\"m-1 midi-field p-2 pb-3\" key={j} style={{height:\"150px\"}}>\r\n                                    <MidiDisplay progression={progression} index={i*numberPerRow+j}/>\r\n                                </Col>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Row>\r\n                )\r\n            })}\r\n        </Container>\r\n    </Jumbotron>\r\n  );\r\n}\r\n\r\nexport default Grid;\r\n","export class Genome{\r\n    constructor(chords, rythm, scale){\r\n        let chordNotes = chords.map(chord => chord.chord)\r\n        if(!chordNotes.flat()){\r\n            chordNotes = chords.map(chord => chord.root)\r\n        }\r\n        //const notes = [...new Set(chordNotes.flat())]\r\n        //let mean = notes.reduce((a, b) => a + b) / notes.length;\r\n        const length = rythm.reduce((a, b) => a + b);\r\n        \r\n        this.scale= scale\r\n        this.length= length\r\n        this.switches= rythm.length\r\n        //this.mean= mean\r\n    }\r\n}","export const rythms = [\r\n    1/8,\r\n    1/4,\r\n    1/2,\r\n    3/4,\r\n    1,\r\n    2,\r\n    3,\r\n    4\r\n]\r\n\r\nexport function mapRythm(input){\r\n    let output = []\r\n    let sum = input\r\n    while(sum!==0){\r\n        for(let i = rythmMap.length-1; i >= 0; i--){\r\n            const currentValue = 1/parseInt(rythmMap[i])\r\n            if(sum>=currentValue){\r\n                output.push(rythmMap[i])\r\n                sum-=currentValue\r\n                break\r\n            }\r\n        }\r\n    }\r\n    return output\r\n}\r\n\r\nexport const rythmMap = [\r\n    '64',\r\n    '32',\r\n    '16',\r\n    '8',\r\n    '4',\r\n    '2',\r\n    '1',\r\n]\r\n// const lengths = [2,4,8]\r\n\r\nexport function constructRythm(length, window){\r\n    let currentLength = 0;\r\n    let rythmStructure = []\r\n    let previousValue= 0\r\n\r\n    const max = window.max\r\n    const min = window.min\r\n    while(currentLength<length){\r\n        let diff = 0 ;\r\n        let randomNumber = Math.floor(Math.random() *  (max-min))+min \r\n        if(Math.random()<0.4 && previousValue!==0){\r\n            randomNumber = previousValue\r\n        } else {\r\n            previousValue = randomNumber\r\n        }\r\n\r\n        if(currentLength+rythms[randomNumber]-diff>length){\r\n            diff = length - currentLength\r\n            rythmStructure.push({rythm: diff,beginning: currentLength})\r\n            currentLength+=diff\r\n            return rythmStructure\r\n        }\r\n\r\n        rythmStructure.push({rythm: rythms[randomNumber]-diff,beginning: currentLength})\r\n        currentLength+=rythms[randomNumber]-diff\r\n    }\r\n\r\n    return rythmStructure\r\n}","const notesMap = [\r\n    'C',\r\n    'C#',\r\n    'D',\r\n    'D#',\r\n    'E',\r\n    'F',\r\n    'F#',\r\n    'G',\r\n    'G#',\r\n    'A',\r\n    'A#',\r\n    'B'\r\n  ]\r\n\r\nexport class Note{\r\n    constructor(hight, start, duration) {\r\n        this.hight = hight\r\n        this.start = start\r\n        this.end = start+duration\r\n        this.duration = duration\r\n\r\n        const octave = Math.floor(hight/12);\r\n        const note = notesMap[hight%12];\r\n        this.note = note+octave.toString();\r\n    }\r\n\r\n    existsInWindow(window){\r\n        if((window[0]>this.start && window[0]<this.end)||(window[1]>this.start && window[1]<=this.end)){\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n}","const maj = 'major'\r\nconst min = 'minor'\r\n\r\n\r\nexport const scales = {\r\n    major: {\r\n        notes: [0,2,4,5,7,9,11],\r\n        mode: [maj,min, min, maj, maj, min, min]\r\n    }\r\n}\r\n\r\nexport const chords = {\r\n    major:[0,4,7,2,11,6,9,1,8,3,10,5],\r\n    minor:[0,3,7,2,10,5,9,4,11,6,8,1]\r\n}\r\n\r\nexport function RandomChord(octave,scaleType,numberOfNotes, jazziness){\r\n    const scale = scales[scaleType]\r\n    const randomNote = Math.floor(Math.random() * scale.notes.length);\r\n\r\n    const mode = scale.mode[randomNote]\r\n    let rootNote = scale.notes[randomNote]\r\n\r\n    if(numberOfNotes===0){\r\n        rootNote+=12*3\r\n        return {root: rootNote, chord: []}\r\n    }\r\n    let chord = randomVoicing(rootNote,mode, numberOfNotes,scale.notes,jazziness,octave)\r\n\r\n    let transposed = chord.map(x => x + 12*(3+octave))\r\n    if(Math.random()-(1/4)>rootNote/12)\r\n        rootNote+=12\r\n\r\n    return {chord: transposed, root: rootNote+12}\r\n}\r\n\r\nfunction randomVoicing(root,mode,numberOfNotes, scale, jazziness=5, octave, dispersion = 0){\r\n    let chord = []\r\n    let overload=0\r\n    for(let i = 0; i<numberOfNotes; i++){\r\n        const choice = Math.floor(Math.random() * jazziness + Math.floor(overload/(jazziness*2)))\r\n        let note = chords[mode][choice];\r\n        note += root\r\n        if(Math.random()<(((choice/(1+octave))/12) - dispersion)){\r\n            note+=12\r\n        }\r\n        if(Math.random()<(((note/2*(1+octave))/12) - dispersion) && choice!==0){\r\n            note-=12\r\n        }\r\n\r\n        if (chord.includes(note) || !scale.includes(note%12))\r\n        {\r\n            overload++\r\n            i--\r\n            continue\r\n        }\r\n        overload=0\r\n        chord.push(note)\r\n    }\r\n    return chord\r\n}","import * as Tone from 'tone'\r\n\r\nconst gain = new Tone.Gain(0.2).toDestination();\r\nconst filter = new Tone.Filter({frequency: 1000, type: \"lowpass\", rolloff: -12, Q: 0}).connect(gain);\r\n\r\nvar isPlaying = 0\r\nvar tempo = 120\r\n\r\nexport function getPlaying(){\r\n  return isPlaying\r\n}\r\n\r\nexport function setPlaying(x) {\r\n  isPlaying=x\r\n} \r\n\r\nexport function getTempo(){\r\n  return tempo\r\n}\r\n\r\nexport function setTempo(x) {\r\n  tempo=x\r\n} \r\n\r\nexport const synth = new Tone.PolySynth(Tone.Synth,{\r\n  oscillator : {\r\n    count: 2,\r\n    spread: 5,\r\n    type : \"sawtooth\",\r\n  },\r\n  // envelope: {\r\n  //   attack: 0.01,\r\n  //   decay: 15,\r\n  //   sustain: 0.20,\r\n  //   release: 0.1,\r\n  // },\r\n    envelope: {\r\n    attack: 0.002,\r\n    decay: 0,\r\n    sustain: 1,\r\n    release: 0.1,\r\n  },\r\n}).connect(filter);\r\n","import { Genome } from './genome'\r\nimport {constructRythm, rythms, mapRythm} from './rythm'\r\nimport { Note } from './note'\r\nimport { RandomChord } from './chords'\r\nimport { synth, getPlaying, setPlaying, getTempo } from './synth'\r\nimport {constructVoicing} from './population'\r\nimport * as Tone from 'tone'\r\nimport midiWriter  from 'midi-writer-js'; \r\nimport FileSaver from 'file-saver';\r\n\r\nexport function createRandomProgression(jazziness, numberOfNotes, noteLengths=0, progressionLength){\r\n    let octave = 0\r\n    let notes = []\r\n    let lengths = constructRythm(progressionLength, noteLengths)\r\n    const scale = Math.floor(Math.random() * 12)\r\n    for(let i = 0; i<lengths.length; i++){\r\n        const chord = RandomChord(octave,'major',numberOfNotes-1,jazziness)\r\n        notes.push({chord: chord.chord.map(x=>new Note(x+scale,lengths[i].beginning, lengths[i].rythm)), root: new Note(chord.root+scale,lengths[i].beginning, lengths[i].rythm)})\r\n    }\r\n        \r\n    const genome = new Genome(notes, lengths, scale)\r\n    return new Progression({notes: notes, rythm: lengths.map(x=>x.rythm), genome: genome })\r\n}\r\n\r\nexport class Progression{\r\n    constructor({rythm, genome, score= 1, notes}){\r\n        this.notes = notes\r\n        this.rythm = rythm\r\n        this.genome = genome\r\n        this.score = score\r\n    }\r\n\r\n    getAllNotes(){\r\n        return this.notes.map(chord => [...chord.chord, chord.root]).flat()\r\n    }\r\n\r\n    play(){\r\n        if(!getPlaying()){\r\n            setPlaying(1)\r\n            let end = 0\r\n            const notes = this.getAllNotes()\r\n            const now = Tone.now()\r\n            for(let i = 0; i<notes.length; i++){\r\n              synth.triggerAttack(notes[i].note, now+(notes[i].start*2*120/getTempo()));\r\n              synth.triggerRelease([notes[i].note],now+(notes[i].end*2*120/getTempo()));\r\n              if(notes[i].end>end)\r\n                end=notes[i].end\r\n            }\r\n            setTimeout(function(){ setPlaying(0) }, end*2*1000*120/getTempo());\r\n        }\r\n    }\r\n\r\n    compare(progression){\r\n        const notes = progression.getAllNotes().map(note => JSON.stringify(note))\r\n        const thisNotes = this.getAllNotes().map(note => JSON.stringify(note))\r\n        let counter = 0\r\n        for(let i=0; i<notes.length; i++){\r\n            if(thisNotes.includes(notes[i]))\r\n                counter++\r\n        }\r\n        if(counter===notes.length)\r\n            return true\r\n        return false\r\n    }\r\n\r\n    download(){\r\n        var track = new midiWriter.Track();\r\n        \r\n        for(let i = 0; i<this.notes.length;i++){\r\n            track.addEvent([\r\n                new midiWriter.NoteEvent({pitch: [...this.notes[i].chord.map(x => x.note), this.notes[i].root.note], duration: mapRythm(this.rythm[i])}),\r\n            ], function(event, index) {\r\n            return {sequential: false};\r\n        });\r\n        }\r\n\r\n        var write = new midiWriter.Writer(track);\r\n        let blob;\r\n        blob = new Blob([ write.buildFile() ], {\r\n            type: 'audio/midi'\r\n          });\r\n        FileSaver.saveAs(blob, 'midi');\r\n    }\r\n\r\n    transpose(scale){\r\n        const diff = scale - this.genome.scale\r\n        const notes = this.notes.map(chord => { return {chord: chord.chord.map(x=>new Note(x.hight+diff, x.start, x.duration)), root: new Note(chord.root.hight+diff, chord.root.start, chord.root.duration)}})\r\n        const genome = new Genome(notes, this.rythm, this.genome.scale + diff)\r\n        return new Progression({...this,genome, notes })\r\n    }\r\n\r\n    mutate(jazziness, noteLengths, mutationChance){\r\n        let newProgression = this.mutateScale()\r\n        newProgression = this.mutateRythm(mutationChance,jazziness, noteLengths)\r\n        newProgression = this.mutateMelody(mutationChance,jazziness)\r\n        return newProgression\r\n    }\r\n\r\n    mutateMelody(p,jazziness){\r\n        let newRythm = []\r\n        let notes = []\r\n        let beginning = 0\r\n        for(let i = 0; i<this.rythm.length; i++){\r\n            if(Math.random()<p && i<this.rythm.length-1){\r\n                const tmp = RandomChord(0,'major',this.notes[0].chord.length,jazziness)\r\n                const root = new Note(tmp.root+this.genome.scale, beginning, this.rythm[i])\r\n                const chord = tmp.chord.map(x=>x+this.genome.scale)\r\n                // eslint-disable-next-line no-loop-func\r\n                notes.push({chord: chord.map(note => new Note(note,beginning,this.rythm[i])), root: new Note(root.hight, beginning, this.rythm[i])})\r\n                newRythm.push(this.rythm[i])\r\n                beginning+=this.rythm[i]\r\n                continue\r\n            }\r\n            newRythm.push(this.rythm[i])\r\n            beginning+=this.rythm[i]\r\n            notes.push(this.notes[i])\r\n        }\r\n        const genome = new Genome(notes, newRythm, this.genome.scale)\r\n        return new Progression({...this,genome, notes, rythm: newRythm })\r\n    }\r\n\r\n    mutateScale(){\r\n        const newScale = Math.floor(Math.random()*3)-1+this.genome.scale\r\n        return this.transpose(newScale)\r\n    }\r\n\r\n    mutateRythm(p,jazziness, window){\r\n        let temp\r\n        const [tempNewRythm, tempNotes] = this.joinChord(p,jazziness)\r\n        temp = new Progression({...this, notes: tempNotes, rythm: tempNewRythm })\r\n        const [newRythm, notes] = temp.breakChord(p,jazziness, window)\r\n        const genome = new Genome(notes, newRythm, this.genome.scale)\r\n        return new Progression({...this,genome, notes, rythm: newRythm })\r\n    }\r\n\r\n    breakChord(p,jazziness, window){\r\n        let newRythm = []\r\n        let notes = []\r\n        let beginning = 0\r\n        const max = window.max\r\n        const min = window.min\r\n        for(let i = 0; i<this.rythm.length; i++){\r\n            let avaibleRythms = []\r\n            rythms.forEach((x,index) => {\r\n                if(x<this.rythm[i]&&index<max&&index>=min)\r\n                    avaibleRythms.push(x)\r\n            })\r\n            if(Math.random()<p && avaibleRythms.length>0){\r\n                const choice = avaibleRythms[Math.floor(Math.random()*avaibleRythms.length)]\r\n\r\n                const tmp = RandomChord(0,'major',this.notes[0].chord.length,jazziness)\r\n                const root = new Note(tmp.root+this.genome.scale, beginning, this.rythm[i])\r\n                const chord = tmp.chord.map(x=>x+this.genome.scale)\r\n                \r\n                if(Math.round(Math.random())<=2){\r\n                    notes.push({\r\n                        // eslint-disable-next-line no-loop-func\r\n                        chord: this.notes[i].chord.map(note => new Note(note.hight,beginning,choice)), \r\n                        root: new Note(this.notes[i].root.hight, beginning, choice)})\r\n                    notes.push({\r\n                        // eslint-disable-next-line no-loop-func\r\n                        chord: chord.map(note => new Note(note,beginning+choice,this.rythm[i]-choice)), \r\n                        root: new Note(root.hight, beginning+choice, this.rythm[i]-choice)})\r\n                    newRythm.push(this.rythm[i]-choice)\r\n                    newRythm.push(choice)\r\n                    }else{\r\n                    // eslint-disable-next-line no-loop-func\r\n                    notes.push({chord: chord.map(note => new Note(note,beginning,choice)), root: new Note(root.hight, beginning, choice)})\r\n                    // eslint-disable-next-line no-loop-func\r\n                    notes.push({chord: this.notes[i].chord.map(note => new Note(note.hight,beginning+choice,this.rythm[i]-choice)), root: new Note(this.notes[i].root.hight, beginning+choice, this.rythm[i]-choice)})\r\n                    newRythm.push(choice)\r\n                    newRythm.push(this.rythm[i]-choice)\r\n                }\r\n\r\n                beginning+=this.rythm[i]\r\n                continue\r\n            }\r\n            newRythm.push(this.rythm[i])\r\n            beginning+=this.rythm[i]\r\n            notes.push(this.notes[i])\r\n        }\r\n        return [newRythm, notes]\r\n    }\r\n\r\n    joinChord(p,jazziness) {\r\n        let newRythm = []\r\n        let notes = []\r\n        let beginning = 0\r\n        for(let i = 0; i<this.rythm.length; i++){\r\n            if(Math.random()<p && i<this.rythm.length-1){\r\n                const chordsToJoin = [...this.notes[i].chord, ...this.notes[i+1].chord]\r\n                const root = this.notes[i+Math.round(Math.random())].root\r\n                const chord = constructVoicing(chordsToJoin, root, this.genome.scale,jazziness,this.notes[i].chord.length)\r\n                // eslint-disable-next-line no-loop-func\r\n                notes.push({chord: chord.map(note => new Note(note,beginning,this.rythm[i]+this.rythm[i+1])), root: new Note(root.hight, beginning, this.rythm[i]+this.rythm[i+1])})\r\n                newRythm.push(this.rythm[i]+this.rythm[i+1])\r\n                beginning+=this.rythm[i]+this.rythm[i+1]\r\n                i++\r\n                continue\r\n            }\r\n            newRythm.push(this.rythm[i])\r\n            beginning+=this.rythm[i]\r\n            notes.push(this.notes[i])\r\n        }\r\n        return [newRythm, notes]\r\n    }\r\n}\r\n","import {createRandomProgression, Progression} from './progression'\r\nimport { Genome } from './genome'\r\nimport { Note } from './note'\r\nimport {scales, chords} from './chords'\r\n\r\nexport function createPopulation(size,jazziness, numberOfNotes, noteLengths, progressionLength) {\r\n    const population = []\r\n\r\n    for(let i =0; i<size; i++){\r\n        population.push(createRandomProgression(jazziness, numberOfNotes, noteLengths, progressionLength))\r\n    }\r\n    return population\r\n}\r\n\r\nexport function newGeneration(population, jazziness, noteLengths, length, mutationChance){\r\n    let newPopulation = []\r\n    for(let i = 0; i<population.length; i++){\r\n        const roulette = createRoulette(population.map(x => x.score))\r\n\r\n        const pick1 = pickSpeciman(roulette)\r\n        const pick2 = pickSpeciman(roulette)\r\n\r\n        const spec1 = population[pick1]\r\n        const spec2 = population[pick2]\r\n    \r\n        const crossed = cross(spec1,spec2, jazziness, length)\r\n        const mutated = crossed.mutate(jazziness, noteLengths, mutationChance)\r\n\r\n        let decision = 1\r\n        for(let j = 0; j<newPopulation.length; j++){\r\n            if(newPopulation[j].compare(mutated)){\r\n                i--\r\n                decision = 0\r\n                break\r\n            }\r\n        }\r\n        if(decision===1)\r\n            newPopulation.push(mutated)\r\n    }\r\n    return newPopulation\r\n}\r\n\r\nfunction createRoulette(scores){\r\n    const max = scores.reduce((a, b) => a + b);\r\n    const probabilities = scores.map(score => score/max)\r\n    return probabilities\r\n}\r\n\r\nfunction pickSpeciman(roulette){\r\n    const pick = Math.random();\r\n    let acc = 0\r\n    let i = 0\r\n    while(acc<pick){\r\n        acc += roulette[i]\r\n        i++\r\n    }\r\n    return i-1\r\n}\r\n\r\nexport function cross(prog1, prog2, jazziness, length){\r\n    const max = Math.max(prog1.genome.scale, prog2.genome.scale)\r\n    const min = Math.min(prog1.genome.scale, prog2.genome.scale)\r\n\r\n    const newScale = Math.floor(Math.random() * (max - min)) + min;\r\n\r\n    const prog1Transposed = prog1.transpose(newScale)\r\n    const prog2Transposed = prog2.transpose(newScale)\r\n\r\n    const newRythm = crossRythms(prog1Transposed.getAllNotes(), prog2Transposed.getAllNotes(), length)\r\n\r\n    const newMelody = crossMelodies(prog1Transposed, prog2Transposed, newRythm, newScale, prog1.notes[0].chord.length,jazziness)\r\n\r\n    const notes = buildNotes(newRythm, newMelody)\r\n\r\n    const genome = new Genome(notes, newRythm, newScale)\r\n    return new Progression({notes: notes, rythm: newRythm, genome: genome })\r\n}\r\n\r\nfunction crossMelodies(notes1, notes2, newRythm, originalScale, numberOfNotes, jazziness){\r\n    let newTimeline = 0\r\n    let newChords = []\r\n    for(let i=0; i<newRythm.length; i++){\r\n        const window=[newTimeline, newTimeline+newRythm[i]]\r\n\r\n        let candidates = []\r\n        notes1.notes.forEach(chord => {\r\n            if(chord.root.existsInWindow(window))\r\n                return candidates.push(chord.root)\r\n            return null\r\n        })\r\n\r\n        notes2.notes.forEach(chord => {\r\n            if(chord.root.existsInWindow(window))\r\n                return candidates.push(chord.root)\r\n            return null\r\n        })\r\n\r\n        candidates =  [...new Set(candidates)]\r\n\r\n        const choice = Math.floor(Math.random()*candidates.length)\r\n        const root = candidates[choice]\r\n\r\n        candidates = []\r\n        notes2.notes.forEach(chord => {\r\n            chord.chord.forEach(note => {\r\n            if(note.existsInWindow(window))\r\n                return candidates.push(note)\r\n            return null\r\n            })\r\n        })\r\n\r\n        notes1.notes.forEach(chord => {\r\n            chord.chord.forEach(note => {\r\n            if(note.existsInWindow(window))\r\n                return candidates.push(note)\r\n            return null\r\n            })\r\n        })\r\n\r\n        candidates =  [...new Set(candidates)]\r\n        const chord = constructVoicing(candidates, root, originalScale, jazziness, numberOfNotes)\r\n\r\n        newChords.push({chord,root:root.hight})\r\n        newTimeline += newRythm[i]\r\n    }\r\n    return newChords\r\n}\r\n\r\nexport function buildNotes(rythm, notes){\r\n    let newNotes = [] \r\n    let beginning = 0\r\n    for(let i = 0; i<rythm.length; i++){\r\n        const chord = notes[i]\r\n        newNotes.push({chord: chord.chord.map(x=>new Note(x,beginning, rythm[i])), root: new Note(chord.root,beginning, rythm[i])}) // eslint-disable-line\r\n        beginning+=rythm[i]\r\n    }\r\n    return newNotes\r\n}\r\n\r\nexport function constructVoicing(candidates, root, originalScale, jazziness, numberOfNotes){\r\n    const scale = scales['major']\r\n    const transposedRoot = (root.hight-originalScale)%12\r\n    const mode = scale.mode[scale.notes.indexOf(transposedRoot)]\r\n    let chord = []\r\n    let overload=0\r\n    for(let j = 0 ; j<numberOfNotes; j++ ){\r\n        const choice = candidates[Math.floor(Math.random()*candidates.length)].hight\r\n        if (chord.includes(choice) || !chords[mode].slice(0,jazziness + Math.floor(overload/(jazziness*2))).includes(((choice-root.hight)%12)))\r\n        {\r\n            overload++\r\n            j--\r\n            continue\r\n        }\r\n        overload=0\r\n        chord.push(choice)\r\n    }\r\n    return chord\r\n}\r\n\r\nfunction crossRythms(notes1, notes2, length){\r\n    let newRythm = []\r\n    let timeline = 0\r\n    let ends = [notes1.map(note => note.end).sort(),notes2.map(note => note.end).sort()]\r\n\r\n    while(timeline<length){\r\n        let choice = Math.round(Math.random())\r\n        for(let i = 0; i< ends[choice].length; i++){\r\n            if(ends[choice][i]>timeline){\r\n                newRythm.push(ends[choice][i]-timeline)\r\n                timeline = ends[choice][i]\r\n                break;\r\n            }\r\n            if(i===ends[choice].length-1){\r\n                newRythm.push(ends[choice][i]-timeline)\r\n                timeline = ends[choice][i]\r\n            }\r\n        }\r\n    }\r\n    return newRythm\r\n}\r\n","import React from 'react';\r\nimport {Button} from '@material-ui/core';\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { newGeneration} from '../genetic/population'\r\nimport {addSpeciman, deletePopulation} from '../actions/populationActions'\r\n\r\nfunction NewGeneration({updateGeneration, params}){\r\n  const dispatch = useDispatch()\r\n  \r\n    const population = useSelector(state => {\r\n        return state.population\r\n    })\r\n\r\n    const nextGen = () => {\r\n        dispatch(deletePopulation())\r\n        newGeneration(population, params.jazziness, {min:params.windowmin,max:params.windowmax},params.progressionLength, params.mutationChance).map(x => dispatch(addSpeciman(x)))\r\n        updateGeneration()\r\n    }\r\n\r\n  return (\r\n    <Button variant=\"contained\" color=\"primary\" onClick={nextGen}>\r\n        Evolve\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default NewGeneration;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Jumbotron, Container, Row, Col} from 'reactstrap'\r\nimport { useDispatch } from 'react-redux'\r\nimport {Button, TextField, Select, MenuItem, InputLabel} from '@material-ui/core';\r\n\r\nimport {createPopulation} from '../genetic/population'\r\nimport {addSpeciman, deletePopulation} from '../actions/populationActions'\r\nimport NewGeneration from './NewGeneration'\r\nimport { setTempo } from '../genetic/synth'\r\nimport {rythms} from '../genetic/rythm'\r\n\r\nfunction ControlPanel() {\r\n    const [generation, setGeneration] = useState(0)\r\n\r\n    const [state, setState] = useState({\r\n        populationSize: 8,\r\n        mutationChance: 0.1,\r\n        jazziness: 5,\r\n        numberOfNotes: 4,\r\n        progressionLength: 4,\r\n        windowmin:rythms[4],\r\n        windowmax:rythms[6]\r\n    })\r\n\r\n    const [tempo, settempo] = useState(120)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    let disabled = 0\r\n    if(generation>0)\r\n        disabled = 1\r\n\r\n    const handleChange = (e) => {\r\n\r\n        let contraint = false\r\n        let value = parseFloat(e.target.value)\r\n\r\n        if(value>0){\r\n            if(e.target.name==='tempo'){\r\n                settempo(value)\r\n                setTempo(value)\r\n            }\r\n            else\r\n                if(!contraint)\r\n                    setState({\r\n                        ...state,\r\n                        [e.target.name]: value\r\n                    });\r\n        }\r\n    }\r\n\r\n    const updateGeneration = () => {\r\n        setGeneration(generation+1)\r\n    }\r\n\r\n    const restart = () => {\r\n        setGeneration(0)\r\n        dispatch(deletePopulation())\r\n        createPopulation(state.populationSize, state.jazziness, state.numberOfNotes, {min:rythms.indexOf(state.windowmin),max:rythms.indexOf(state.windowmax)}, state.progressionLength).map(x => dispatch(addSpeciman(x)))\r\n    }\r\n\r\n    useEffect(() => {\r\n        restart()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      }, [state]);\r\n\r\n\r\n  return (\r\n    <Jumbotron>\r\n        <Container>\r\n            <Row>\r\n                <h2>Generation: {generation}</h2>\r\n            </Row>\r\n            <Row className='p-5'>\r\n                <Col><TextField InputProps={{ inputProps: { min: 1 } }} name='tempo' label=\"Tempo\" type=\"number\" onChange={handleChange} value={tempo}/></Col>\r\n                <Col><TextField InputProps={{ inputProps: { min: 1 } }} disabled={disabled} name='progressionLength' label=\"Progression Length\" type=\"number\" onChange={handleChange} value={state.progressionLength}/></Col>\r\n                <Col><TextField InputProps={{ inputProps: { min: 1 } }} disabled={disabled} name='populationSize' label=\"Population size\" type=\"number\" onChange={handleChange} value={state.populationSize}/></Col>\r\n                <Col><TextField InputProps={{ inputProps: { max: 1 } }} disabled={disabled} name='mutationChance' label=\"Mutation chance\" type=\"number\" onChange={handleChange} value={state.mutationChance}/></Col>\r\n            </Row>\r\n            <Row className='p-5'>\r\n                        <Col>\r\n                            <InputLabel shrink >\r\n                            Min Note length\r\n                            </InputLabel>\r\n                            <Select\r\n                            name='windowmin'\r\n                            disabled={disabled}\r\n                            value={state.windowmin}\r\n                            onChange={handleChange}\r\n                            >\r\n                            {rythms.map((rythm, index) => {\r\n                                if(rythm<state.windowmax)\r\n                                return <MenuItem key={index} value={rythm}>{rythm}</MenuItem>\r\n                                else\r\n                                return null\r\n                            })}\r\n                            </Select>\r\n                        </Col>\r\n                        <Col>\r\n                        <InputLabel shrink >\r\n                        Max Note length\r\n                            </InputLabel>\r\n                            <Select\r\n                            name='windowmax'\r\n                            disabled={disabled}\r\n                            value={state.windowmax}\r\n                            onChange={handleChange}\r\n                            >\r\n                            {rythms.map((rythm, index) => {\r\n                                if(rythm>state.windowmin)\r\n                                return <MenuItem key={index} value={rythm}>{rythm}</MenuItem>\r\n                                else\r\n                                return null\r\n                            })}\r\n                            </Select>\r\n                        </Col>\r\n                        <Col>\r\n                        <TextField InputProps={{ inputProps: { min: state.numberOfNotes, max:12 } }} disabled={disabled} name='jazziness' label=\"Jazziness\" type=\"number\" onChange={handleChange} value={state.jazziness}/>\r\n                        </Col>\r\n                        <Col>\r\n                        <TextField InputProps={{ inputProps: { min: 1, max:10} }} disabled={disabled} name='numberOfNotes' label=\"Number of notes\" type=\"number\" onChange={handleChange} value={state.numberOfNotes}/>\r\n                        </Col> \r\n                    </Row>\r\n            <Row>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={restart}>\r\n                    Restart\r\n                </Button>\r\n                <NewGeneration updateGeneration={updateGeneration} params={{...state, windowmin: rythms.indexOf(state.windowmin), windowmax:rythms.indexOf(state.windowmax)}}/>\r\n            </Row>\r\n        </Container>\r\n    </Jumbotron>\r\n  );\r\n}\r\n\r\nexport default ControlPanel;\r\n","import React, {useEffect, useState} from 'react';\r\nimport MidiDisplay from './MidiDisplay';\r\nimport {Jumbotron, Container, Row, Col} from 'reactstrap'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { cross } from '../genetic/population'\r\n\r\nfunction Test() {\r\n\r\n    const [child, setChild] = useState(null)\r\n    const population = useSelector(state => {\r\n        return state.population\r\n    })\r\n\r\n    useEffect(() => {\r\n        if(population.length>1){\r\n            setChild(cross(population[0], population[1]))\r\n        }\r\n      }, [population]);\r\n    // population[0].notes = population[0].notes.map(x=>x.map(x=>50))\r\n    // population[0].notes2 = population[0].notes2.map(x=> x= new Note(50, x.start, x.duration))\r\n\r\nif (!child){\r\n    return null\r\n}\r\n  return (\r\n    <Jumbotron>\r\n        <Container>\r\n            <Row className='p-3'>\r\n                <Col><h2>Debug</h2></Col>\r\n            </Row>\r\n            <Row className='p-3'>\r\n                <h4>Parent 1:</h4>\r\n            </Row>\r\n            <Row>\r\n                <Col style={{height:\"300px\"}}>\r\n                    <MidiDisplay progression={population[0]} index={0}/>\r\n                </Col>\r\n            </Row>\r\n            <Row className='p-3'>\r\n                <h4>Parent 2:</h4>\r\n            </Row>\r\n            <Row>\r\n                <Col style={{height:\"300px\"}}>\r\n                    <MidiDisplay progression={population[1]} index={1}/>\r\n                </Col>\r\n            </Row>\r\n            <Row className='p-3'>\r\n                <h4>Child:</h4>\r\n            </Row>\r\n            <Row>\r\n                <Col style={{height:\"300px\"}}>\r\n                    <MidiDisplay progression={child}/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </Jumbotron>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n","import Grid from './Grid'\nimport ControlPanel from './ControlPanel'\nimport Test from './Test'\nimport '../style/App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#c62828',\n    },\n    secondary: {\n      main: '#181a1b'\n    },\n  },\n}\n);\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <ControlPanel/>\n      <Router>\n        <Switch>\n          <Route path=\"/test\">\n            <Test />\n          </Route>\n          <Route path=\"/\">\n            <Grid />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nApp.whyDidYouRender = true\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_SPECIMAN, SET_SPECIMAN_SCORE, DELETE_POPULATION } from \"../actions/actionTypes\";\r\nimport {Progression} from '../genetic/progression'\r\n\r\nconst initialState = [] ;\r\n\r\nconst populationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_SPECIMAN: {\r\n        return [\r\n          ...state,\r\n          action.payload.speciman\r\n        ];\r\n      }\r\n\r\n      case DELETE_POPULATION: {\r\n        return [];\r\n      }\r\n\r\n      case SET_SPECIMAN_SCORE:{\r\n        return state.map((item, index) => {\r\n          if (index !== action.payload.index) {\r\n            return item\r\n          }\r\n          return new Progression({\r\n            ...item,\r\n            score: action.payload.score\r\n          })\r\n        })\r\n      }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default populationReducer;\r\n","import { combineReducers } from 'redux';\r\nimport populationReducer from \"./populationReducer\";\r\n\r\nexport default combineReducers({ population: populationReducer });\r\n","import { createStore } from 'redux';\r\nimport rootReducer from \"../reducers/index\";\r\n\r\nexport default createStore(rootReducer);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style/index.css';\n\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}